ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.rodata.WaveName.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 53696E65 		.ascii	"Sine\000"
  23      00
  24 0005 000000   		.align	2
  25              	.LC1:
  26 0008 53617700 		.ascii	"Saw\000"
  27              		.align	2
  28              	.LC2:
  29 000c 54726900 		.ascii	"Tri\000"
  30              		.align	2
  31              	.LC3:
  32 0010 5069616E 		.ascii	"Piano\000"
  32      6F00
  33 0016 0000     		.align	2
  34              	.LC4:
  35 0018 47756974 		.ascii	"Guitar\000"
  35      617200
  36 001f 00       		.align	2
  37              	.LC5:
  38 0020 4472756D 		.ascii	"Drum\000"
  38      00
  39 0025 000000   		.align	2
  40              	.LC6:
  41 0028 3F00     		.ascii	"?\000"
  42              		.section	.text.WaveName,"ax",%progbits
  43              		.align	1
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	WaveName:
  49              	.LVL0:
  50              	.LFB138:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 2


   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** #include "stm32f4xx.h"
  26:Core/Src/main.c **** #include "lcd_stm32f4.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** // Configuration values
  37:Core/Src/main.c **** #define NS             256U           // Number of samples in LUT (>= 128)
  38:Core/Src/main.c **** #define TIM2CLK        16000000UL     // TIM2 clock frequency (see .ioc)
  39:Core/Src/main.c **** #define F_SIGNAL       440UL          // Output analog signal frequency (Hz)
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  50:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  51:Core/Src/main.c **** DMA_HandleTypeDef hdma_tim2_ch1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** // Lookup tables (12-bit: 0..4095)
  55:Core/Src/main.c **** uint32_t Sin_LUT[NS];
  56:Core/Src/main.c **** uint32_t Saw_LUT[NS];
  57:Core/Src/main.c **** uint32_t Triangle_LUT[NS];
  58:Core/Src/main.c **** uint32_t Piano_LUT[NS];
  59:Core/Src/main.c **** uint32_t Guitar_LUT[NS];
  60:Core/Src/main.c **** uint32_t Drum_LUT[NS];
  61:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 3


  62:Core/Src/main.c **** // Current waveform selection
  63:Core/Src/main.c **** static volatile uint8_t g_wave_index = 0;  // 0..5
  64:Core/Src/main.c **** static volatile uint32_t *g_current_lut = Sin_LUT;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** // Equation to calculate TIM2_Ticks: TIM2CLK / (NS * F_SIGNAL)
  71:Core/Src/main.c **** uint32_t TIM2_Ticks = (uint32_t)((TIM2CLK + (NS * F_SIGNAL / 2)) / (NS * F_SIGNAL)); // rounded
  72:Core/Src/main.c **** uint32_t DestAddress = (uint32_t) &(TIM3->CCR3); // Write LUT TO TIM3->CCR3 to modify PWM duty cycl
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* USER CODE END PV */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  78:Core/Src/main.c **** void SystemClock_Config(void);
  79:Core/Src/main.c **** static void MX_GPIO_Init(void);
  80:Core/Src/main.c **** static void MX_DMA_Init(void);
  81:Core/Src/main.c **** static void MX_TIM2_Init(void);
  82:Core/Src/main.c **** static void MX_TIM3_Init(void);
  83:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  84:Core/Src/main.c **** void EXTI0_IRQHandler(void);
  85:Core/Src/main.c **** /* USER CODE END PFP */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  88:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** #include <math.h>
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** static void Generate_LUTs(void){
  93:Core/Src/main.c ****   for (uint32_t i = 0; i < NS; i++){
  94:Core/Src/main.c ****     float phase = (2.0f * 3.14159265358979f * (float)i) / (float)NS;
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****     // Sine 0..4095
  97:Core/Src/main.c ****     float s = sinf(phase);
  98:Core/Src/main.c ****     Sin_LUT[i] = (uint32_t)(2047.5f * (s + 1.0f));
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****     // Saw 0..4095
 101:Core/Src/main.c ****     Saw_LUT[i] = (uint32_t)((4095.0f * (float)i) / (float)(NS - 1));
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****     // Triangle 0..4095
 104:Core/Src/main.c ****     if (i < (NS/2)){
 105:Core/Src/main.c ****       Triangle_LUT[i] = (uint32_t)((4095.0f * (2.0f * (float)i)) / (float)(NS - 1));
 106:Core/Src/main.c ****     } else {
 107:Core/Src/main.c ****       float j = (float)(i - NS/2);
 108:Core/Src/main.c ****       Triangle_LUT[i] = (uint32_t)(4095.0f - (4095.0f * (2.0f * j)) / (float)(NS - 1));
 109:Core/Src/main.c ****     }
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****     // Placeholder musical timbres (replace with .wav-derived tables for Task 1.2)
 112:Core/Src/main.c ****     float piano = 0.8f * sinf(phase) + 0.2f * sinf(2.0f * phase);
 113:Core/Src/main.c ****     Piano_LUT[i] = (uint32_t)(2047.5f * (piano + 1.0f));
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****     float guitar = 0.7f * sinf(phase) + 0.2f * sinf(3.0f * phase) + 0.1f * sinf(5.0f * phase);
 116:Core/Src/main.c ****     Guitar_LUT[i] = (uint32_t)(2047.5f * (guitar + 1.0f));
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****     float drum = 0.6f * sinf(phase) + 0.25f * sinf(2.7f * phase) + 0.15f * sinf(5.3f * phase);
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 4


 119:Core/Src/main.c ****     Drum_LUT[i] = (uint32_t)(2047.5f * (drum + 1.0f));
 120:Core/Src/main.c ****   }
 121:Core/Src/main.c **** }
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** static const char* WaveName(uint8_t idx){
  51              		.loc 1 123 41 view -0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55              		@ link register save eliminated.
 124:Core/Src/main.c ****   switch(idx){
  56              		.loc 1 124 3 view .LVU1
  57 0000 0528     		cmp	r0, #5
  58 0002 0ED8     		bhi	.L2
  59 0004 DFE800F0 		tbb	[pc, r0]
  60              	.L4:
  61 0008 03       		.byte	(.L9-.L4)/2
  62 0009 0F       		.byte	(.L10-.L4)/2
  63 000a 05       		.byte	(.L7-.L4)/2
  64 000b 07       		.byte	(.L6-.L4)/2
  65 000c 09       		.byte	(.L5-.L4)/2
  66 000d 0B       		.byte	(.L3-.L4)/2
  67              		.p2align 1
  68              	.L9:
  69 000e 0748     		ldr	r0, .L11
  70              	.LVL1:
  71              		.loc 1 124 3 is_stmt 0 view .LVU2
  72 0010 7047     		bx	lr
  73              	.LVL2:
  74              	.L7:
 125:Core/Src/main.c ****     case 0: return "Sine";
 126:Core/Src/main.c ****     case 1: return "Saw";
 127:Core/Src/main.c ****     case 2: return "Tri";
  75              		.loc 1 127 13 is_stmt 1 view .LVU3
  76              		.loc 1 127 20 is_stmt 0 view .LVU4
  77 0012 0748     		ldr	r0, .L11+4
  78              	.LVL3:
  79              		.loc 1 127 20 view .LVU5
  80 0014 7047     		bx	lr
  81              	.LVL4:
  82              	.L6:
 128:Core/Src/main.c ****     case 3: return "Piano";
  83              		.loc 1 128 13 is_stmt 1 view .LVU6
  84              		.loc 1 128 20 is_stmt 0 view .LVU7
  85 0016 0748     		ldr	r0, .L11+8
  86              	.LVL5:
  87              		.loc 1 128 20 view .LVU8
  88 0018 7047     		bx	lr
  89              	.LVL6:
  90              	.L5:
 129:Core/Src/main.c ****     case 4: return "Guitar";
  91              		.loc 1 129 13 is_stmt 1 view .LVU9
  92              		.loc 1 129 20 is_stmt 0 view .LVU10
  93 001a 0748     		ldr	r0, .L11+12
  94              	.LVL7:
  95              		.loc 1 129 20 view .LVU11
  96 001c 7047     		bx	lr
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 5


  97              	.LVL8:
  98              	.L3:
 130:Core/Src/main.c ****     case 5: return "Drum";
  99              		.loc 1 130 13 is_stmt 1 view .LVU12
 100              		.loc 1 130 20 is_stmt 0 view .LVU13
 101 001e 0748     		ldr	r0, .L11+16
 102              	.LVL9:
 103              		.loc 1 130 20 view .LVU14
 104 0020 7047     		bx	lr
 105              	.LVL10:
 106              	.L2:
 131:Core/Src/main.c ****     default: return "?";
 107              		.loc 1 131 14 is_stmt 1 view .LVU15
 108              		.loc 1 131 21 is_stmt 0 view .LVU16
 109 0022 0748     		ldr	r0, .L11+20
 110              	.LVL11:
 111              		.loc 1 131 21 view .LVU17
 112 0024 7047     		bx	lr
 113              	.LVL12:
 114              	.L10:
 126:Core/Src/main.c ****     case 2: return "Tri";
 115              		.loc 1 126 20 view .LVU18
 116 0026 0748     		ldr	r0, .L11+24
 117              	.LVL13:
 132:Core/Src/main.c ****   }
 133:Core/Src/main.c **** }
 118              		.loc 1 133 1 view .LVU19
 119 0028 7047     		bx	lr
 120              	.L12:
 121 002a 00BF     		.align	2
 122              	.L11:
 123 002c 00000000 		.word	.LC0
 124 0030 0C000000 		.word	.LC2
 125 0034 10000000 		.word	.LC3
 126 0038 18000000 		.word	.LC4
 127 003c 20000000 		.word	.LC5
 128 0040 28000000 		.word	.LC6
 129 0044 08000000 		.word	.LC1
 130              		.cfi_endproc
 131              	.LFE138:
 133              		.section	.text.MX_GPIO_Init,"ax",%progbits
 134              		.align	1
 135              		.syntax unified
 136              		.thumb
 137              		.thumb_func
 139              	MX_GPIO_Init:
 140              	.LFB144:
 134:Core/Src/main.c **** 
 135:Core/Src/main.c **** /* USER CODE END 0 */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** /**
 138:Core/Src/main.c ****   * @brief  The application entry point.
 139:Core/Src/main.c ****   * @retval int
 140:Core/Src/main.c ****   */
 141:Core/Src/main.c **** int main(void)
 142:Core/Src/main.c **** {
 143:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 6


 144:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 145:Core/Src/main.c ****   // Boot indicator: brief PB7 blinks using direct registers (no HAL)
 146:Core/Src/main.c ****   // Enable GPIOB clock
 147:Core/Src/main.c ****   RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 148:Core/Src/main.c ****   // Set PB7 as output
 149:Core/Src/main.c ****   GPIOB->MODER &= ~(GPIO_MODER_MODER7);
 150:Core/Src/main.c ****   GPIOB->MODER |= GPIO_MODER_MODER7_0;
 151:Core/Src/main.c ****   // Blink a few times
 152:Core/Src/main.c ****   for (volatile uint32_t k = 0; k < 3; ++k){
 153:Core/Src/main.c ****     // PB7 high
 154:Core/Src/main.c ****     GPIOB->BSRR = GPIO_BSRR_BS7;
 155:Core/Src/main.c ****     for (volatile uint32_t d = 0; d < 200000; ++d) { __NOP(); }
 156:Core/Src/main.c ****     // PB7 low
 157:Core/Src/main.c ****     GPIOB->BSRR = GPIO_BSRR_BR7;
 158:Core/Src/main.c ****     for (volatile uint32_t d = 0; d < 200000; ++d) { __NOP(); }
 159:Core/Src/main.c ****   }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE END 1 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 166:Core/Src/main.c ****   HAL_Init();
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END Init */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   /* Configure the system clock */
 173:Core/Src/main.c ****   SystemClock_Config();
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE END SysInit */
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* Initialize all configured peripherals */
 180:Core/Src/main.c ****   MX_GPIO_Init();
 181:Core/Src/main.c ****   MX_DMA_Init();
 182:Core/Src/main.c ****   MX_TIM2_Init();
 183:Core/Src/main.c ****   MX_TIM3_Init();
 184:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 185:Core/Src/main.c ****   Generate_LUTs();
 186:Core/Src/main.c ****   g_wave_index = 0;
 187:Core/Src/main.c ****   g_current_lut = Sin_LUT;
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   // Initialize LCD and print waveform name
 190:Core/Src/main.c ****   init_LCD();
 191:Core/Src/main.c ****   lcd_command(CLEAR);
 192:Core/Src/main.c ****   lcd_putstring("Wave: ");
 193:Core/Src/main.c ****   lcd_putstring((char*)WaveName(g_wave_index));
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   // Start PWM on TIM3 CH3
 196:Core/Src/main.c ****   if (HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_3) != HAL_OK) { Error_Handler(); }
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   // Start TIM2 OC on CH1
 199:Core/Src/main.c ****   if (HAL_TIM_OC_Start(&htim2, TIM_CHANNEL_1) != HAL_OK) { Error_Handler(); }
 200:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 7


 201:Core/Src/main.c ****   // Start DMA circular transfer: LUT -> TIM3->CCR3
 202:Core/Src/main.c ****   if (HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)g_current_lut, DestAddress, NS) != HAL_OK) { Error
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   // Enable TIM2 CC1 DMA request
 205:Core/Src/main.c ****   __HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE END 2 */
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* Infinite loop */
 210:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 211:Core/Src/main.c ****   while (1)
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     /* USER CODE END WHILE */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 216:Core/Src/main.c ****     // Heartbeat blink every ~250ms
 217:Core/Src/main.c ****     static uint32_t last_toggle = 0;
 218:Core/Src/main.c ****     uint32_t now = HAL_GetTick();
 219:Core/Src/main.c ****     if ((now - last_toggle) >= 250U) {
 220:Core/Src/main.c ****       last_toggle = now;
 221:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 222:Core/Src/main.c ****     }
 223:Core/Src/main.c ****   }
 224:Core/Src/main.c ****   /* USER CODE END 3 */
 225:Core/Src/main.c **** }
 226:Core/Src/main.c **** 
 227:Core/Src/main.c **** /**
 228:Core/Src/main.c ****   * @brief System Clock Configuration
 229:Core/Src/main.c ****   * @retval None
 230:Core/Src/main.c ****   */
 231:Core/Src/main.c **** void SystemClock_Config(void)
 232:Core/Src/main.c **** {
 233:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 234:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 235:Core/Src/main.c **** 
 236:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 237:Core/Src/main.c ****   */
 238:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 239:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 242:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 243:Core/Src/main.c ****   */
 244:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 245:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 246:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 247:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 248:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 249:Core/Src/main.c ****   {
 250:Core/Src/main.c ****     Error_Handler();
 251:Core/Src/main.c ****   }
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 254:Core/Src/main.c ****   */
 255:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 256:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 257:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 8


 258:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 259:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 260:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 263:Core/Src/main.c ****   {
 264:Core/Src/main.c ****     Error_Handler();
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c **** }
 267:Core/Src/main.c **** 
 268:Core/Src/main.c **** /**
 269:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 270:Core/Src/main.c ****   * @param None
 271:Core/Src/main.c ****   * @retval None
 272:Core/Src/main.c ****   */
 273:Core/Src/main.c **** static void MX_TIM2_Init(void)
 274:Core/Src/main.c **** {
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 277:Core/Src/main.c **** 
 278:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 281:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 282:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 283:Core/Src/main.c **** 
 284:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 287:Core/Src/main.c ****   htim2.Instance = TIM2;
 288:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 289:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 290:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks - 1;
 291:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 292:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 293:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 294:Core/Src/main.c ****   {
 295:Core/Src/main.c ****     Error_Handler();
 296:Core/Src/main.c ****   }
 297:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 298:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 299:Core/Src/main.c ****   {
 300:Core/Src/main.c ****     Error_Handler();
 301:Core/Src/main.c ****   }
 302:Core/Src/main.c ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 307:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 308:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 309:Core/Src/main.c ****   {
 310:Core/Src/main.c ****     Error_Handler();
 311:Core/Src/main.c ****   }
 312:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 313:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 314:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 9


 315:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 316:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 317:Core/Src/main.c ****   {
 318:Core/Src/main.c ****     Error_Handler();
 319:Core/Src/main.c ****   }
 320:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 321:Core/Src/main.c ****   /* TIM2_CH1 DMA Init */
 322:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   hdma_tim2_ch1.Instance = DMA1_Stream5;
 325:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 326:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 327:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 328:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 329:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 330:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 331:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 332:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 333:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 336:Core/Src/main.c ****   {
 337:Core/Src/main.c ****       Error_Handler();
 338:Core/Src/main.c ****   }
 339:Core/Src/main.c **** 
 340:Core/Src/main.c ****   /* Link DMA handle to TIM2 handle */
 341:Core/Src/main.c ****   __HAL_LINKDMA(&htim2, hdma[TIM_DMA_ID_CC1], hdma_tim2_ch1);
 342:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** }
 345:Core/Src/main.c **** 
 346:Core/Src/main.c **** /**
 347:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 348:Core/Src/main.c ****   * @param None
 349:Core/Src/main.c ****   * @retval None
 350:Core/Src/main.c ****   */
 351:Core/Src/main.c **** static void MX_TIM3_Init(void)
 352:Core/Src/main.c **** {
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 359:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 360:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 365:Core/Src/main.c ****   htim3.Instance = TIM3;
 366:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 367:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 368:Core/Src/main.c ****   htim3.Init.Period = 4095; // 12-bit resolution
 369:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 370:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 371:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 10


 372:Core/Src/main.c ****   {
 373:Core/Src/main.c ****     Error_Handler();
 374:Core/Src/main.c ****   }
 375:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 376:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 377:Core/Src/main.c ****   {
 378:Core/Src/main.c ****     Error_Handler();
 379:Core/Src/main.c ****   }
 380:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 381:Core/Src/main.c ****   {
 382:Core/Src/main.c ****     Error_Handler();
 383:Core/Src/main.c ****   }
 384:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 385:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 386:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 387:Core/Src/main.c ****   {
 388:Core/Src/main.c ****     Error_Handler();
 389:Core/Src/main.c ****   }
 390:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 391:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 392:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 393:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 394:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 395:Core/Src/main.c ****   {
 396:Core/Src/main.c ****     Error_Handler();
 397:Core/Src/main.c ****   }
 398:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 401:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 402:Core/Src/main.c **** 
 403:Core/Src/main.c **** }
 404:Core/Src/main.c **** 
 405:Core/Src/main.c **** /**
 406:Core/Src/main.c ****   * Enable DMA controller clock
 407:Core/Src/main.c ****   */
 408:Core/Src/main.c **** static void MX_DMA_Init(void)
 409:Core/Src/main.c **** {
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /* DMA controller clock enable */
 412:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /* DMA interrupt init */
 415:Core/Src/main.c ****   /* DMA1_Stream5_IRQn interrupt configuration */
 416:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 417:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** }
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** /**
 422:Core/Src/main.c ****   * @brief GPIO Initialization Function
 423:Core/Src/main.c ****   * @param None
 424:Core/Src/main.c ****   * @retval None
 425:Core/Src/main.c ****   */
 426:Core/Src/main.c **** static void MX_GPIO_Init(void)
 427:Core/Src/main.c **** {
 141              		.loc 1 427 1 is_stmt 1 view -0
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 11


 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 40
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 146              	.LCFI0:
 147              		.cfi_def_cfa_offset 36
 148              		.cfi_offset 4, -36
 149              		.cfi_offset 5, -32
 150              		.cfi_offset 6, -28
 151              		.cfi_offset 7, -24
 152              		.cfi_offset 8, -20
 153              		.cfi_offset 9, -16
 154              		.cfi_offset 10, -12
 155              		.cfi_offset 11, -8
 156              		.cfi_offset 14, -4
 157 0004 8BB0     		sub	sp, sp, #44
 158              	.LCFI1:
 159              		.cfi_def_cfa_offset 80
 428:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 160              		.loc 1 428 3 view .LVU21
 161              		.loc 1 428 20 is_stmt 0 view .LVU22
 162 0006 0024     		movs	r4, #0
 163 0008 0594     		str	r4, [sp, #20]
 164 000a 0694     		str	r4, [sp, #24]
 165 000c 0794     		str	r4, [sp, #28]
 166 000e 0894     		str	r4, [sp, #32]
 167 0010 0994     		str	r4, [sp, #36]
 429:Core/Src/main.c ****   /* USER CODE BEGIN MX_GPIO_Init_1 */
 430:Core/Src/main.c **** 
 431:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_1 */
 432:Core/Src/main.c **** 
 433:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 434:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 168              		.loc 1 434 3 is_stmt 1 view .LVU23
 169              	.LBB4:
 170              		.loc 1 434 3 view .LVU24
 171 0012 0194     		str	r4, [sp, #4]
 172              		.loc 1 434 3 view .LVU25
 173 0014 3B4B     		ldr	r3, .L15
 174 0016 1A6B     		ldr	r2, [r3, #48]
 175 0018 42F08002 		orr	r2, r2, #128
 176 001c 1A63     		str	r2, [r3, #48]
 177              		.loc 1 434 3 view .LVU26
 178 001e 1A6B     		ldr	r2, [r3, #48]
 179 0020 02F08002 		and	r2, r2, #128
 180 0024 0192     		str	r2, [sp, #4]
 181              		.loc 1 434 3 view .LVU27
 182 0026 019A     		ldr	r2, [sp, #4]
 183              	.LBE4:
 184              		.loc 1 434 3 view .LVU28
 435:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 185              		.loc 1 435 3 view .LVU29
 186              	.LBB5:
 187              		.loc 1 435 3 view .LVU30
 188 0028 0294     		str	r4, [sp, #8]
 189              		.loc 1 435 3 view .LVU31
 190 002a 1A6B     		ldr	r2, [r3, #48]
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 12


 191 002c 42F00102 		orr	r2, r2, #1
 192 0030 1A63     		str	r2, [r3, #48]
 193              		.loc 1 435 3 view .LVU32
 194 0032 1A6B     		ldr	r2, [r3, #48]
 195 0034 02F00102 		and	r2, r2, #1
 196 0038 0292     		str	r2, [sp, #8]
 197              		.loc 1 435 3 view .LVU33
 198 003a 029A     		ldr	r2, [sp, #8]
 199              	.LBE5:
 200              		.loc 1 435 3 view .LVU34
 436:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 201              		.loc 1 436 3 view .LVU35
 202              	.LBB6:
 203              		.loc 1 436 3 view .LVU36
 204 003c 0394     		str	r4, [sp, #12]
 205              		.loc 1 436 3 view .LVU37
 206 003e 1A6B     		ldr	r2, [r3, #48]
 207 0040 42F00202 		orr	r2, r2, #2
 208 0044 1A63     		str	r2, [r3, #48]
 209              		.loc 1 436 3 view .LVU38
 210 0046 1A6B     		ldr	r2, [r3, #48]
 211 0048 02F00202 		and	r2, r2, #2
 212 004c 0392     		str	r2, [sp, #12]
 213              		.loc 1 436 3 view .LVU39
 214 004e 039A     		ldr	r2, [sp, #12]
 215              	.LBE6:
 216              		.loc 1 436 3 view .LVU40
 437:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 217              		.loc 1 437 3 view .LVU41
 218              	.LBB7:
 219              		.loc 1 437 3 view .LVU42
 220 0050 0494     		str	r4, [sp, #16]
 221              		.loc 1 437 3 view .LVU43
 222 0052 1A6B     		ldr	r2, [r3, #48]
 223 0054 42F00402 		orr	r2, r2, #4
 224 0058 1A63     		str	r2, [r3, #48]
 225              		.loc 1 437 3 view .LVU44
 226 005a 1B6B     		ldr	r3, [r3, #48]
 227 005c 03F00403 		and	r3, r3, #4
 228 0060 0493     		str	r3, [sp, #16]
 229              		.loc 1 437 3 view .LVU45
 230 0062 049B     		ldr	r3, [sp, #16]
 231              	.LBE7:
 232              		.loc 1 437 3 view .LVU46
 438:Core/Src/main.c **** 
 439:Core/Src/main.c ****   // -------------------------------
 440:Core/Src/main.c ****   // LCD pins configuration
 441:Core/Src/main.c ****   // -------------------------------
 442:Core/Src/main.c ****   // Configure PC14 (RS) and PC15 (E) as output push-pull
 443:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_14 | GPIO_PIN_15;
 233              		.loc 1 443 3 view .LVU47
 234              		.loc 1 443 23 is_stmt 0 view .LVU48
 235 0064 4FF4404B 		mov	fp, #49152
 236 0068 CDF814B0 		str	fp, [sp, #20]
 444:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 237              		.loc 1 444 3 is_stmt 1 view .LVU49
 238              		.loc 1 444 24 is_stmt 0 view .LVU50
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 13


 239 006c 0126     		movs	r6, #1
 240 006e 0696     		str	r6, [sp, #24]
 445:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 241              		.loc 1 445 3 is_stmt 1 view .LVU51
 446:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 242              		.loc 1 446 3 view .LVU52
 447:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 243              		.loc 1 447 3 view .LVU53
 244 0070 DFF89CA0 		ldr	r10, .L15+12
 245 0074 05A9     		add	r1, sp, #20
 246 0076 5046     		mov	r0, r10
 247 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 248              	.LVL14:
 448:Core/Src/main.c **** 
 449:Core/Src/main.c ****   // Configure PB8 (D4) and PB9 (D5) as output push-pull
 450:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 249              		.loc 1 450 3 view .LVU54
 250              		.loc 1 450 23 is_stmt 0 view .LVU55
 251 007c 4FF44079 		mov	r9, #768
 252 0080 CDF81490 		str	r9, [sp, #20]
 451:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 253              		.loc 1 451 3 is_stmt 1 view .LVU56
 254 0084 204D     		ldr	r5, .L15+4
 255 0086 05A9     		add	r1, sp, #20
 256 0088 2846     		mov	r0, r5
 257 008a FFF7FEFF 		bl	HAL_GPIO_Init
 258              	.LVL15:
 452:Core/Src/main.c **** 
 453:Core/Src/main.c ****   // Configure PA12 (D6) and PA15 (D7) as output push-pull
 454:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_12 | GPIO_PIN_15;
 259              		.loc 1 454 3 view .LVU57
 260              		.loc 1 454 23 is_stmt 0 view .LVU58
 261 008e 4FF41048 		mov	r8, #36864
 262 0092 CDF81480 		str	r8, [sp, #20]
 455:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 263              		.loc 1 455 3 is_stmt 1 view .LVU59
 264 0096 1D4F     		ldr	r7, .L15+8
 265 0098 05A9     		add	r1, sp, #20
 266 009a 3846     		mov	r0, r7
 267 009c FFF7FEFF 		bl	HAL_GPIO_Init
 268              	.LVL16:
 456:Core/Src/main.c **** 
 457:Core/Src/main.c ****   // Set all LCD pins LOW initially
 458:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_14 | GPIO_PIN_15, GPIO_PIN_RESET);
 269              		.loc 1 458 3 view .LVU60
 270 00a0 2246     		mov	r2, r4
 271 00a2 5946     		mov	r1, fp
 272 00a4 5046     		mov	r0, r10
 273 00a6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 274              	.LVL17:
 459:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8 | GPIO_PIN_9, GPIO_PIN_RESET);
 275              		.loc 1 459 3 view .LVU61
 276 00aa 2246     		mov	r2, r4
 277 00ac 4946     		mov	r1, r9
 278 00ae 2846     		mov	r0, r5
 279 00b0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 280              	.LVL18:
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 14


 460:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12 | GPIO_PIN_15, GPIO_PIN_RESET);
 281              		.loc 1 460 3 view .LVU62
 282 00b4 2246     		mov	r2, r4
 283 00b6 4146     		mov	r1, r8
 284 00b8 3846     		mov	r0, r7
 285 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 286              	.LVL19:
 461:Core/Src/main.c **** 
 462:Core/Src/main.c **** 
 463:Core/Src/main.c ****   // -------------------------------
 464:Core/Src/main.c ****   // Button0 configuration (PA0)
 465:Core/Src/main.c ****   // -------------------------------
 466:Core/Src/main.c ****   GPIO_InitStruct.Pin = Button0_Pin;
 287              		.loc 1 466 3 view .LVU63
 288              		.loc 1 466 23 is_stmt 0 view .LVU64
 289 00be 0596     		str	r6, [sp, #20]
 467:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING; // Interrupt on rising edge
 290              		.loc 1 467 3 is_stmt 1 view .LVU65
 291              		.loc 1 467 24 is_stmt 0 view .LVU66
 292 00c0 4FF48813 		mov	r3, #1114112
 293 00c4 0693     		str	r3, [sp, #24]
 468:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_PULLUP;         // Use pull-up resistor
 294              		.loc 1 468 3 is_stmt 1 view .LVU67
 295              		.loc 1 468 24 is_stmt 0 view .LVU68
 296 00c6 0796     		str	r6, [sp, #28]
 469:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 297              		.loc 1 469 3 is_stmt 1 view .LVU69
 298 00c8 05A9     		add	r1, sp, #20
 299 00ca 3846     		mov	r0, r7
 300 00cc FFF7FEFF 		bl	HAL_GPIO_Init
 301              	.LVL20:
 470:Core/Src/main.c **** 
 471:Core/Src/main.c ****   // Enable and set EXTI line 0 interrupt priority
 472:Core/Src/main.c ****   HAL_NVIC_SetPriority(EXTI0_IRQn, 2, 0);
 302              		.loc 1 472 3 view .LVU70
 303 00d0 2246     		mov	r2, r4
 304 00d2 0221     		movs	r1, #2
 305 00d4 0620     		movs	r0, #6
 306 00d6 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 307              	.LVL21:
 473:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(EXTI0_IRQn);
 308              		.loc 1 473 3 view .LVU71
 309 00da 0620     		movs	r0, #6
 310 00dc FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 311              	.LVL22:
 474:Core/Src/main.c **** 
 475:Core/Src/main.c ****   // -------------------------------
 476:Core/Src/main.c ****   // Heartbeat LED on PB7 (unused pin)
 477:Core/Src/main.c ****   // -------------------------------
 478:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_7;
 312              		.loc 1 478 3 view .LVU72
 313              		.loc 1 478 23 is_stmt 0 view .LVU73
 314 00e0 8027     		movs	r7, #128
 315 00e2 0597     		str	r7, [sp, #20]
 479:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 316              		.loc 1 479 3 is_stmt 1 view .LVU74
 317              		.loc 1 479 24 is_stmt 0 view .LVU75
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 15


 318 00e4 0696     		str	r6, [sp, #24]
 480:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 319              		.loc 1 480 3 is_stmt 1 view .LVU76
 320              		.loc 1 480 24 is_stmt 0 view .LVU77
 321 00e6 0794     		str	r4, [sp, #28]
 481:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 322              		.loc 1 481 3 is_stmt 1 view .LVU78
 323              		.loc 1 481 25 is_stmt 0 view .LVU79
 324 00e8 0894     		str	r4, [sp, #32]
 482:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 325              		.loc 1 482 3 is_stmt 1 view .LVU80
 326 00ea 05A9     		add	r1, sp, #20
 327 00ec 2846     		mov	r0, r5
 328 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 329              	.LVL23:
 483:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_7, GPIO_PIN_RESET);
 330              		.loc 1 483 3 view .LVU81
 331 00f2 2246     		mov	r2, r4
 332 00f4 3946     		mov	r1, r7
 333 00f6 2846     		mov	r0, r5
 334 00f8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 335              	.LVL24:
 484:Core/Src/main.c **** 
 485:Core/Src/main.c ****   /* USER CODE END MX_GPIO_Init_2 */
 486:Core/Src/main.c **** }
 336              		.loc 1 486 1 is_stmt 0 view .LVU82
 337 00fc 0BB0     		add	sp, sp, #44
 338              	.LCFI2:
 339              		.cfi_def_cfa_offset 36
 340              		@ sp needed
 341 00fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 342              	.L16:
 343 0102 00BF     		.align	2
 344              	.L15:
 345 0104 00380240 		.word	1073887232
 346 0108 00040240 		.word	1073873920
 347 010c 00000240 		.word	1073872896
 348 0110 00080240 		.word	1073874944
 349              		.cfi_endproc
 350              	.LFE144:
 352              		.section	.text.MX_DMA_Init,"ax",%progbits
 353              		.align	1
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 358              	MX_DMA_Init:
 359              	.LFB143:
 409:Core/Src/main.c **** 
 360              		.loc 1 409 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 8
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364 0000 00B5     		push	{lr}
 365              	.LCFI3:
 366              		.cfi_def_cfa_offset 4
 367              		.cfi_offset 14, -4
 368 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 16


 369              	.LCFI4:
 370              		.cfi_def_cfa_offset 16
 412:Core/Src/main.c **** 
 371              		.loc 1 412 3 view .LVU84
 372              	.LBB8:
 412:Core/Src/main.c **** 
 373              		.loc 1 412 3 view .LVU85
 374 0004 0021     		movs	r1, #0
 375 0006 0191     		str	r1, [sp, #4]
 412:Core/Src/main.c **** 
 376              		.loc 1 412 3 view .LVU86
 377 0008 094B     		ldr	r3, .L19
 378 000a 1A6B     		ldr	r2, [r3, #48]
 379 000c 42F40012 		orr	r2, r2, #2097152
 380 0010 1A63     		str	r2, [r3, #48]
 412:Core/Src/main.c **** 
 381              		.loc 1 412 3 view .LVU87
 382 0012 1B6B     		ldr	r3, [r3, #48]
 383 0014 03F40013 		and	r3, r3, #2097152
 384 0018 0193     		str	r3, [sp, #4]
 412:Core/Src/main.c **** 
 385              		.loc 1 412 3 view .LVU88
 386 001a 019B     		ldr	r3, [sp, #4]
 387              	.LBE8:
 412:Core/Src/main.c **** 
 388              		.loc 1 412 3 view .LVU89
 416:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 389              		.loc 1 416 3 view .LVU90
 390 001c 0A46     		mov	r2, r1
 391 001e 1020     		movs	r0, #16
 392 0020 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 393              	.LVL25:
 417:Core/Src/main.c **** 
 394              		.loc 1 417 3 view .LVU91
 395 0024 1020     		movs	r0, #16
 396 0026 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 397              	.LVL26:
 419:Core/Src/main.c **** 
 398              		.loc 1 419 1 is_stmt 0 view .LVU92
 399 002a 03B0     		add	sp, sp, #12
 400              	.LCFI5:
 401              		.cfi_def_cfa_offset 4
 402              		@ sp needed
 403 002c 5DF804FB 		ldr	pc, [sp], #4
 404              	.L20:
 405              		.align	2
 406              	.L19:
 407 0030 00380240 		.word	1073887232
 408              		.cfi_endproc
 409              	.LFE143:
 411              		.section	.text.Generate_LUTs,"ax",%progbits
 412              		.align	1
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 417              	Generate_LUTs:
 418              	.LFB137:
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 17


  92:Core/Src/main.c ****   for (uint32_t i = 0; i < NS; i++){
 419              		.loc 1 92 32 is_stmt 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423 0000 10B5     		push	{r4, lr}
 424              	.LCFI6:
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 4, -8
 427              		.cfi_offset 14, -4
 428 0002 2DED068B 		vpush.64	{d8, d9, d10}
 429              	.LCFI7:
 430              		.cfi_def_cfa_offset 32
 431              		.cfi_offset 80, -32
 432              		.cfi_offset 81, -28
 433              		.cfi_offset 82, -24
 434              		.cfi_offset 83, -20
 435              		.cfi_offset 84, -16
 436              		.cfi_offset 85, -12
  93:Core/Src/main.c ****     float phase = (2.0f * 3.14159265358979f * (float)i) / (float)NS;
 437              		.loc 1 93 3 view .LVU94
 438              	.LBB9:
  93:Core/Src/main.c ****     float phase = (2.0f * 3.14159265358979f * (float)i) / (float)NS;
 439              		.loc 1 93 8 view .LVU95
 440              	.LVL27:
  93:Core/Src/main.c ****     float phase = (2.0f * 3.14159265358979f * (float)i) / (float)NS;
 441              		.loc 1 93 17 is_stmt 0 view .LVU96
 442 0006 0024     		movs	r4, #0
  93:Core/Src/main.c ****     float phase = (2.0f * 3.14159265358979f * (float)i) / (float)NS;
 443              		.loc 1 93 3 view .LVU97
 444 0008 82E0     		b	.L22
 445              	.LVL28:
 446              	.L23:
 447              	.LBB10:
 448              	.LBB11:
 107:Core/Src/main.c ****       Triangle_LUT[i] = (uint32_t)(4095.0f - (4095.0f * (2.0f * j)) / (float)(NS - 1));
 449              		.loc 1 107 7 is_stmt 1 view .LVU98
 107:Core/Src/main.c ****       Triangle_LUT[i] = (uint32_t)(4095.0f - (4095.0f * (2.0f * j)) / (float)(NS - 1));
 450              		.loc 1 107 27 is_stmt 0 view .LVU99
 451 000a A4F18003 		sub	r3, r4, #128
 452 000e 07EE903A 		vmov	s15, r3	@ int
 107:Core/Src/main.c ****       Triangle_LUT[i] = (uint32_t)(4095.0f - (4095.0f * (2.0f * j)) / (float)(NS - 1));
 453              		.loc 1 107 13 view .LVU100
 454 0012 F8EE677A 		vcvt.f32.u32	s15, s15
 455              	.LVL29:
 108:Core/Src/main.c ****     }
 456              		.loc 1 108 7 is_stmt 1 view .LVU101
 108:Core/Src/main.c ****     }
 457              		.loc 1 108 63 is_stmt 0 view .LVU102
 458 0016 77EEA77A 		vadd.f32	s15, s15, s15
 459              	.LVL30:
 108:Core/Src/main.c ****     }
 460              		.loc 1 108 55 view .LVU103
 461 001a 9FED617A 		vldr.32	s14, .L28
 462 001e 67EE877A 		vmul.f32	s15, s15, s14
 108:Core/Src/main.c ****     }
 463              		.loc 1 108 69 view .LVU104
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 18


 464 0022 9FED606A 		vldr.32	s12, .L28+4
 465 0026 C7EE866A 		vdiv.f32	s13, s15, s12
 108:Core/Src/main.c ****     }
 466              		.loc 1 108 44 view .LVU105
 467 002a 37EE667A 		vsub.f32	s14, s14, s13
 108:Core/Src/main.c ****     }
 468              		.loc 1 108 25 view .LVU106
 469 002e BCEEC77A 		vcvt.u32.f32	s14, s14
 108:Core/Src/main.c ****     }
 470              		.loc 1 108 23 view .LVU107
 471 0032 5D4B     		ldr	r3, .L28+8
 472              	.LVL31:
 108:Core/Src/main.c ****     }
 473              		.loc 1 108 23 view .LVU108
 474 0034 17EE102A 		vmov	r2, s14	@ int
 475 0038 43F82420 		str	r2, [r3, r4, lsl #2]
 476              	.LVL32:
 477              	.L24:
 108:Core/Src/main.c ****     }
 478              		.loc 1 108 23 view .LVU109
 479              	.LBE11:
 112:Core/Src/main.c ****     Piano_LUT[i] = (uint32_t)(2047.5f * (piano + 1.0f));
 480              		.loc 1 112 5 is_stmt 1 view .LVU110
 112:Core/Src/main.c ****     Piano_LUT[i] = (uint32_t)(2047.5f * (piano + 1.0f));
 481              		.loc 1 112 24 is_stmt 0 discriminator 1 view .LVU111
 482 003c DFED5B8A 		vldr.32	s17, .L28+12
 483 0040 68EE288A 		vmul.f32	s17, s16, s17
 112:Core/Src/main.c ****     Piano_LUT[i] = (uint32_t)(2047.5f * (piano + 1.0f));
 484              		.loc 1 112 47 discriminator 1 view .LVU112
 485 0044 39EE090A 		vadd.f32	s0, s18, s18
 486              	.LVL33:
 112:Core/Src/main.c ****     Piano_LUT[i] = (uint32_t)(2047.5f * (piano + 1.0f));
 487              		.loc 1 112 47 discriminator 1 view .LVU113
 488 0048 FFF7FEFF 		bl	sinf
 489              	.LVL34:
 112:Core/Src/main.c ****     Piano_LUT[i] = (uint32_t)(2047.5f * (piano + 1.0f));
 490              		.loc 1 112 45 discriminator 2 view .LVU114
 491 004c DFED58AA 		vldr.32	s21, .L28+16
 492 0050 20EE2A0A 		vmul.f32	s0, s0, s21
 112:Core/Src/main.c ****     Piano_LUT[i] = (uint32_t)(2047.5f * (piano + 1.0f));
 493              		.loc 1 112 11 discriminator 2 view .LVU115
 494 0054 78EE808A 		vadd.f32	s17, s17, s0
 495              	.LVL35:
 113:Core/Src/main.c **** 
 496              		.loc 1 113 5 is_stmt 1 view .LVU116
 113:Core/Src/main.c **** 
 497              		.loc 1 113 48 is_stmt 0 view .LVU117
 498 0058 B7EE00AA 		vmov.f32	s20, #1.0e+0
 499 005c 78EE8A8A 		vadd.f32	s17, s17, s20
 500              	.LVL36:
 113:Core/Src/main.c **** 
 501              		.loc 1 113 39 view .LVU118
 502 0060 DFED549A 		vldr.32	s19, .L28+20
 503 0064 68EEA98A 		vmul.f32	s17, s17, s19
 113:Core/Src/main.c **** 
 504              		.loc 1 113 20 view .LVU119
 505 0068 FCEEE88A 		vcvt.u32.f32	s17, s17
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 19


 113:Core/Src/main.c **** 
 506              		.loc 1 113 18 view .LVU120
 507 006c 524B     		ldr	r3, .L28+24
 508 006e 18EE902A 		vmov	r2, s17	@ int
 509 0072 43F82420 		str	r2, [r3, r4, lsl #2]
 115:Core/Src/main.c ****     Guitar_LUT[i] = (uint32_t)(2047.5f * (guitar + 1.0f));
 510              		.loc 1 115 5 is_stmt 1 view .LVU121
 115:Core/Src/main.c ****     Guitar_LUT[i] = (uint32_t)(2047.5f * (guitar + 1.0f));
 511              		.loc 1 115 25 is_stmt 0 discriminator 1 view .LVU122
 512 0076 DFED518A 		vldr.32	s17, .L28+28
 513 007a 68EE288A 		vmul.f32	s17, s16, s17
 115:Core/Src/main.c ****     Guitar_LUT[i] = (uint32_t)(2047.5f * (guitar + 1.0f));
 514              		.loc 1 115 48 discriminator 1 view .LVU123
 515 007e B0EE080A 		vmov.f32	s0, #3.0e+0
 516              	.LVL37:
 115:Core/Src/main.c ****     Guitar_LUT[i] = (uint32_t)(2047.5f * (guitar + 1.0f));
 517              		.loc 1 115 48 discriminator 1 view .LVU124
 518 0082 29EE000A 		vmul.f32	s0, s18, s0
 519 0086 FFF7FEFF 		bl	sinf
 520              	.LVL38:
 115:Core/Src/main.c ****     Guitar_LUT[i] = (uint32_t)(2047.5f * (guitar + 1.0f));
 521              		.loc 1 115 46 discriminator 2 view .LVU125
 522 008a 20EE2A0A 		vmul.f32	s0, s0, s21
 115:Core/Src/main.c ****     Guitar_LUT[i] = (uint32_t)(2047.5f * (guitar + 1.0f));
 523              		.loc 1 115 39 discriminator 2 view .LVU126
 524 008e 78EE808A 		vadd.f32	s17, s17, s0
 115:Core/Src/main.c ****     Guitar_LUT[i] = (uint32_t)(2047.5f * (guitar + 1.0f));
 525              		.loc 1 115 76 discriminator 2 view .LVU127
 526 0092 B1EE040A 		vmov.f32	s0, #5.0e+0
 527 0096 29EE000A 		vmul.f32	s0, s18, s0
 528 009a FFF7FEFF 		bl	sinf
 529              	.LVL39:
 115:Core/Src/main.c ****     Guitar_LUT[i] = (uint32_t)(2047.5f * (guitar + 1.0f));
 530              		.loc 1 115 74 discriminator 3 view .LVU128
 531 009e DFED487A 		vldr.32	s15, .L28+32
 532 00a2 20EE270A 		vmul.f32	s0, s0, s15
 115:Core/Src/main.c ****     Guitar_LUT[i] = (uint32_t)(2047.5f * (guitar + 1.0f));
 533              		.loc 1 115 11 discriminator 3 view .LVU129
 534 00a6 78EE808A 		vadd.f32	s17, s17, s0
 535              	.LVL40:
 116:Core/Src/main.c **** 
 536              		.loc 1 116 5 is_stmt 1 view .LVU130
 116:Core/Src/main.c **** 
 537              		.loc 1 116 50 is_stmt 0 view .LVU131
 538 00aa 78EE8A8A 		vadd.f32	s17, s17, s20
 539              	.LVL41:
 116:Core/Src/main.c **** 
 540              		.loc 1 116 40 view .LVU132
 541 00ae 68EEA98A 		vmul.f32	s17, s17, s19
 116:Core/Src/main.c **** 
 542              		.loc 1 116 21 view .LVU133
 543 00b2 FCEEE88A 		vcvt.u32.f32	s17, s17
 116:Core/Src/main.c **** 
 544              		.loc 1 116 19 view .LVU134
 545 00b6 434B     		ldr	r3, .L28+36
 546 00b8 18EE902A 		vmov	r2, s17	@ int
 547 00bc 43F82420 		str	r2, [r3, r4, lsl #2]
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 20


 118:Core/Src/main.c ****     Drum_LUT[i] = (uint32_t)(2047.5f * (drum + 1.0f));
 548              		.loc 1 118 5 is_stmt 1 view .LVU135
 118:Core/Src/main.c ****     Drum_LUT[i] = (uint32_t)(2047.5f * (drum + 1.0f));
 549              		.loc 1 118 23 is_stmt 0 discriminator 1 view .LVU136
 550 00c0 DFED417A 		vldr.32	s15, .L28+40
 551 00c4 28EE278A 		vmul.f32	s16, s16, s15
 552              	.LVL42:
 118:Core/Src/main.c ****     Drum_LUT[i] = (uint32_t)(2047.5f * (drum + 1.0f));
 553              		.loc 1 118 47 discriminator 1 view .LVU137
 554 00c8 9FED400A 		vldr.32	s0, .L28+44
 555 00cc 29EE000A 		vmul.f32	s0, s18, s0
 556 00d0 FFF7FEFF 		bl	sinf
 557              	.LVL43:
 118:Core/Src/main.c ****     Drum_LUT[i] = (uint32_t)(2047.5f * (drum + 1.0f));
 558              		.loc 1 118 45 discriminator 2 view .LVU138
 559 00d4 F5EE007A 		vmov.f32	s15, #2.5e-1
 560 00d8 20EE270A 		vmul.f32	s0, s0, s15
 118:Core/Src/main.c ****     Drum_LUT[i] = (uint32_t)(2047.5f * (drum + 1.0f));
 561              		.loc 1 118 37 discriminator 2 view .LVU139
 562 00dc 38EE008A 		vadd.f32	s16, s16, s0
 118:Core/Src/main.c ****     Drum_LUT[i] = (uint32_t)(2047.5f * (drum + 1.0f));
 563              		.loc 1 118 76 discriminator 2 view .LVU140
 564 00e0 9FED3B0A 		vldr.32	s0, .L28+48
 565 00e4 29EE000A 		vmul.f32	s0, s18, s0
 566 00e8 FFF7FEFF 		bl	sinf
 567              	.LVL44:
 118:Core/Src/main.c ****     Drum_LUT[i] = (uint32_t)(2047.5f * (drum + 1.0f));
 568              		.loc 1 118 74 discriminator 3 view .LVU141
 569 00ec DFED397A 		vldr.32	s15, .L28+52
 570 00f0 20EE270A 		vmul.f32	s0, s0, s15
 118:Core/Src/main.c ****     Drum_LUT[i] = (uint32_t)(2047.5f * (drum + 1.0f));
 571              		.loc 1 118 11 discriminator 3 view .LVU142
 572 00f4 38EE008A 		vadd.f32	s16, s16, s0
 573              	.LVL45:
 119:Core/Src/main.c ****   }
 574              		.loc 1 119 5 is_stmt 1 view .LVU143
 119:Core/Src/main.c ****   }
 575              		.loc 1 119 46 is_stmt 0 view .LVU144
 576 00f8 38EE0A8A 		vadd.f32	s16, s16, s20
 577              	.LVL46:
 119:Core/Src/main.c ****   }
 578              		.loc 1 119 38 view .LVU145
 579 00fc 28EE298A 		vmul.f32	s16, s16, s19
 119:Core/Src/main.c ****   }
 580              		.loc 1 119 19 view .LVU146
 581 0100 BCEEC88A 		vcvt.u32.f32	s16, s16
 119:Core/Src/main.c ****   }
 582              		.loc 1 119 17 view .LVU147
 583 0104 344B     		ldr	r3, .L28+56
 584 0106 18EE102A 		vmov	r2, s16	@ int
 585 010a 43F82420 		str	r2, [r3, r4, lsl #2]
 586              	.LBE10:
  93:Core/Src/main.c ****     float phase = (2.0f * 3.14159265358979f * (float)i) / (float)NS;
 587              		.loc 1 93 33 is_stmt 1 discriminator 2 view .LVU148
 588 010e 0134     		adds	r4, r4, #1
 589              	.LVL47:
 590              	.L22:
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 21


  93:Core/Src/main.c ****     float phase = (2.0f * 3.14159265358979f * (float)i) / (float)NS;
 591              		.loc 1 93 26 discriminator 1 view .LVU149
 592 0110 FF2C     		cmp	r4, #255
 593 0112 42D8     		bhi	.L27
 594              	.LBB12:
  94:Core/Src/main.c **** 
 595              		.loc 1 94 5 view .LVU150
  94:Core/Src/main.c **** 
 596              		.loc 1 94 47 is_stmt 0 view .LVU151
 597 0114 07EE904A 		vmov	s15, r4	@ int
 598 0118 F8EE678A 		vcvt.f32.u32	s17, s15
  94:Core/Src/main.c **** 
 599              		.loc 1 94 45 view .LVU152
 600 011c 9FED2F9A 		vldr.32	s18, .L28+60
 601 0120 28EE899A 		vmul.f32	s18, s17, s18
  94:Core/Src/main.c **** 
 602              		.loc 1 94 11 view .LVU153
 603 0124 DFED2E7A 		vldr.32	s15, .L28+64
 604 0128 29EE279A 		vmul.f32	s18, s18, s15
 605              	.LVL48:
  97:Core/Src/main.c ****     Sin_LUT[i] = (uint32_t)(2047.5f * (s + 1.0f));
 606              		.loc 1 97 5 is_stmt 1 view .LVU154
  97:Core/Src/main.c ****     Sin_LUT[i] = (uint32_t)(2047.5f * (s + 1.0f));
 607              		.loc 1 97 15 is_stmt 0 view .LVU155
 608 012c B0EE490A 		vmov.f32	s0, s18
 609 0130 FFF7FEFF 		bl	sinf
 610              	.LVL49:
 611 0134 B0EE408A 		vmov.f32	s16, s0
 612              	.LVL50:
  98:Core/Src/main.c **** 
 613              		.loc 1 98 5 is_stmt 1 view .LVU156
  98:Core/Src/main.c **** 
 614              		.loc 1 98 42 is_stmt 0 view .LVU157
 615 0138 F7EE007A 		vmov.f32	s15, #1.0e+0
 616 013c 70EE277A 		vadd.f32	s15, s0, s15
  98:Core/Src/main.c **** 
 617              		.loc 1 98 37 view .LVU158
 618 0140 9FED1C7A 		vldr.32	s14, .L28+20
 619 0144 67EE877A 		vmul.f32	s15, s15, s14
  98:Core/Src/main.c **** 
 620              		.loc 1 98 18 view .LVU159
 621 0148 FCEEE77A 		vcvt.u32.f32	s15, s15
  98:Core/Src/main.c **** 
 622              		.loc 1 98 16 view .LVU160
 623 014c 254B     		ldr	r3, .L28+68
 624 014e 17EE902A 		vmov	r2, s15	@ int
 625 0152 43F82420 		str	r2, [r3, r4, lsl #2]
 101:Core/Src/main.c **** 
 626              		.loc 1 101 5 is_stmt 1 view .LVU161
 101:Core/Src/main.c **** 
 627              		.loc 1 101 38 is_stmt 0 view .LVU162
 628 0156 9FED127A 		vldr.32	s14, .L28
 629 015a 28EE877A 		vmul.f32	s14, s17, s14
 101:Core/Src/main.c **** 
 630              		.loc 1 101 50 view .LVU163
 631 015e DFED116A 		vldr.32	s13, .L28+4
 632 0162 C7EE267A 		vdiv.f32	s15, s14, s13
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 22


 101:Core/Src/main.c **** 
 633              		.loc 1 101 18 view .LVU164
 634 0166 FCEEE77A 		vcvt.u32.f32	s15, s15
 101:Core/Src/main.c **** 
 635              		.loc 1 101 16 view .LVU165
 636 016a 1F4B     		ldr	r3, .L28+72
 637 016c 17EE902A 		vmov	r2, s15	@ int
 638 0170 43F82420 		str	r2, [r3, r4, lsl #2]
 104:Core/Src/main.c ****       Triangle_LUT[i] = (uint32_t)((4095.0f * (2.0f * (float)i)) / (float)(NS - 1));
 639              		.loc 1 104 5 is_stmt 1 view .LVU166
 104:Core/Src/main.c ****       Triangle_LUT[i] = (uint32_t)((4095.0f * (2.0f * (float)i)) / (float)(NS - 1));
 640              		.loc 1 104 8 is_stmt 0 view .LVU167
 641 0174 7F2C     		cmp	r4, #127
 642 0176 3FF648AF 		bhi	.L23
 105:Core/Src/main.c ****     } else {
 643              		.loc 1 105 7 is_stmt 1 view .LVU168
 105:Core/Src/main.c ****     } else {
 644              		.loc 1 105 53 is_stmt 0 view .LVU169
 645 017a 78EEA88A 		vadd.f32	s17, s17, s17
 105:Core/Src/main.c ****     } else {
 646              		.loc 1 105 45 view .LVU170
 647 017e DFED087A 		vldr.32	s15, .L28
 648 0182 68EEA78A 		vmul.f32	s17, s17, s15
 105:Core/Src/main.c ****     } else {
 649              		.loc 1 105 66 view .LVU171
 650 0186 C8EEA67A 		vdiv.f32	s15, s17, s13
 105:Core/Src/main.c ****     } else {
 651              		.loc 1 105 25 view .LVU172
 652 018a FCEEE77A 		vcvt.u32.f32	s15, s15
 105:Core/Src/main.c ****     } else {
 653              		.loc 1 105 23 view .LVU173
 654 018e 064B     		ldr	r3, .L28+8
 655 0190 17EE902A 		vmov	r2, s15	@ int
 656 0194 43F82420 		str	r2, [r3, r4, lsl #2]
 657 0198 50E7     		b	.L24
 658              	.LVL51:
 659              	.L27:
 105:Core/Src/main.c ****     } else {
 660              		.loc 1 105 23 view .LVU174
 661              	.LBE12:
 662              	.LBE9:
 121:Core/Src/main.c **** 
 663              		.loc 1 121 1 view .LVU175
 664 019a BDEC068B 		vldm	sp!, {d8-d10}
 665              	.LCFI8:
 666              		.cfi_restore 84
 667              		.cfi_restore 85
 668              		.cfi_restore 82
 669              		.cfi_restore 83
 670              		.cfi_restore 80
 671              		.cfi_restore 81
 672              		.cfi_def_cfa_offset 8
 673 019e 10BD     		pop	{r4, pc}
 674              	.LVL52:
 675              	.L29:
 121:Core/Src/main.c **** 
 676              		.loc 1 121 1 view .LVU176
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 23


 677              		.align	2
 678              	.L28:
 679 01a0 00F07F45 		.word	1166012416
 680 01a4 00007F43 		.word	1132396544
 681 01a8 00000000 		.word	Triangle_LUT
 682 01ac CDCC4C3F 		.word	1061997773
 683 01b0 CDCC4C3E 		.word	1045220557
 684 01b4 00F0FF44 		.word	1157623808
 685 01b8 00000000 		.word	Piano_LUT
 686 01bc 3333333F 		.word	1060320051
 687 01c0 CDCCCC3D 		.word	1036831949
 688 01c4 00000000 		.word	Guitar_LUT
 689 01c8 9A99193F 		.word	1058642330
 690 01cc CDCC2C40 		.word	1076677837
 691 01d0 9A99A940 		.word	1084856730
 692 01d4 9A99193E 		.word	1041865114
 693 01d8 00000000 		.word	Drum_LUT
 694 01dc DB0FC940 		.word	1086918619
 695 01e0 0000803B 		.word	998244352
 696 01e4 00000000 		.word	Sin_LUT
 697 01e8 00000000 		.word	Saw_LUT
 698              		.cfi_endproc
 699              	.LFE137:
 701              		.section	.text.Error_Handler,"ax",%progbits
 702              		.align	1
 703              		.global	Error_Handler
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 708              	Error_Handler:
 709              	.LFB146:
 487:Core/Src/main.c **** 
 488:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 489:Core/Src/main.c **** void EXTI0_IRQHandler(void){
 490:Core/Src/main.c **** 
 491:Core/Src/main.c **** 	// Debounce using HAL_GetTick()
 492:Core/Src/main.c **** 	static uint32_t last = 0;
 493:Core/Src/main.c **** 	uint32_t now = HAL_GetTick();
 494:Core/Src/main.c **** 	if ((now - last) < 150) { // ~150ms debounce
 495:Core/Src/main.c **** 		HAL_GPIO_EXTI_IRQHandler(Button0_Pin); // Clear interrupt flags
 496:Core/Src/main.c **** 		return;
 497:Core/Src/main.c **** 	}
 498:Core/Src/main.c **** 	last = now;
 499:Core/Src/main.c **** 
 500:Core/Src/main.c **** 	// Disable DMA request and abort current transfer
 501:Core/Src/main.c **** 	__HAL_TIM_DISABLE_DMA(&htim2, TIM_DMA_CC1);
 502:Core/Src/main.c **** 	HAL_DMA_Abort(&hdma_tim2_ch1);
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** 	// Cycle waveform index and select new LUT
 505:Core/Src/main.c **** 	g_wave_index = (uint8_t)((g_wave_index + 1) % 6);
 506:Core/Src/main.c **** 	switch(g_wave_index){
 507:Core/Src/main.c **** 		case 0: g_current_lut = Sin_LUT; break;
 508:Core/Src/main.c **** 		case 1: g_current_lut = Saw_LUT; break;
 509:Core/Src/main.c **** 		case 2: g_current_lut = Triangle_LUT; break;
 510:Core/Src/main.c **** 		case 3: g_current_lut = Piano_LUT; break;
 511:Core/Src/main.c **** 		case 4: g_current_lut = Guitar_LUT; break;
 512:Core/Src/main.c **** 		case 5: g_current_lut = Drum_LUT; break;
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 24


 513:Core/Src/main.c **** 		default: g_current_lut = Sin_LUT; break;
 514:Core/Src/main.c **** 	}
 515:Core/Src/main.c **** 
 516:Core/Src/main.c **** 	// Update LCD with current waveform name
 517:Core/Src/main.c **** 	lcd_command(CLEAR);
 518:Core/Src/main.c **** 	lcd_putstring("Wave: ");
 519:Core/Src/main.c **** 	lcd_putstring((char*)WaveName(g_wave_index));
 520:Core/Src/main.c **** 
 521:Core/Src/main.c **** 	// Restart DMA with the new source LUT and re-enable TIM2 CC1 DMA
 522:Core/Src/main.c **** 	if (HAL_DMA_Start_IT(&hdma_tim2_ch1, (uint32_t)g_current_lut, DestAddress, NS) != HAL_OK) {
 523:Core/Src/main.c **** 		Error_Handler();
 524:Core/Src/main.c **** 	}
 525:Core/Src/main.c **** 	__HAL_TIM_ENABLE_DMA(&htim2, TIM_DMA_CC1);
 526:Core/Src/main.c **** 
 527:Core/Src/main.c **** 	HAL_GPIO_EXTI_IRQHandler(Button0_Pin); // Clear interrupt flags
 528:Core/Src/main.c **** }
 529:Core/Src/main.c **** /* USER CODE END 4 */
 530:Core/Src/main.c **** 
 531:Core/Src/main.c **** /**
 532:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 533:Core/Src/main.c ****   * @retval None
 534:Core/Src/main.c ****   */
 535:Core/Src/main.c **** void Error_Handler(void)
 536:Core/Src/main.c **** {
 710              		.loc 1 536 1 is_stmt 1 view -0
 711              		.cfi_startproc
 712              		@ Volatile: function does not return.
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 537:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 538:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 539:Core/Src/main.c ****   __disable_irq();
 716              		.loc 1 539 3 view .LVU178
 717              	.LBB13:
 718              	.LBI13:
 719              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 25


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 26


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 27


 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 28


 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 29


 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 30


 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 31


 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 32


 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 33


 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 34


 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 35


 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 36


 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 37


 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 38


 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 39


 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 40


 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 41


 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 720              		.loc 2 960 27 view .LVU179
 721              	.LBB14:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 722              		.loc 2 962 3 view .LVU180
 723              		.syntax unified
 724              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 725 0000 72B6     		cpsid i
 726              	@ 0 "" 2
 727              		.thumb
 728              		.syntax unified
 729              	.L31:
 730              	.LBE14:
 731              	.LBE13:
 540:Core/Src/main.c ****   while (1)
 732              		.loc 1 540 3 view .LVU181
 541:Core/Src/main.c ****   {
 542:Core/Src/main.c ****   }
 733              		.loc 1 542 3 view .LVU182
 540:Core/Src/main.c ****   while (1)
 734              		.loc 1 540 9 view .LVU183
 735 0002 FEE7     		b	.L31
 736              		.cfi_endproc
 737              	.LFE146:
 739              		.section	.text.MX_TIM2_Init,"ax",%progbits
 740              		.align	1
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 42


 745              	MX_TIM2_Init:
 746              	.LFB141:
 274:Core/Src/main.c **** 
 747              		.loc 1 274 1 view -0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 56
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751 0000 00B5     		push	{lr}
 752              	.LCFI9:
 753              		.cfi_def_cfa_offset 4
 754              		.cfi_offset 14, -4
 755 0002 8FB0     		sub	sp, sp, #60
 756              	.LCFI10:
 757              		.cfi_def_cfa_offset 64
 280:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 758              		.loc 1 280 3 view .LVU185
 280:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 759              		.loc 1 280 26 is_stmt 0 view .LVU186
 760 0004 0023     		movs	r3, #0
 761 0006 0A93     		str	r3, [sp, #40]
 762 0008 0B93     		str	r3, [sp, #44]
 763 000a 0C93     		str	r3, [sp, #48]
 764 000c 0D93     		str	r3, [sp, #52]
 281:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 765              		.loc 1 281 3 is_stmt 1 view .LVU187
 281:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 766              		.loc 1 281 27 is_stmt 0 view .LVU188
 767 000e 0893     		str	r3, [sp, #32]
 768 0010 0993     		str	r3, [sp, #36]
 282:Core/Src/main.c **** 
 769              		.loc 1 282 3 is_stmt 1 view .LVU189
 282:Core/Src/main.c **** 
 770              		.loc 1 282 22 is_stmt 0 view .LVU190
 771 0012 0193     		str	r3, [sp, #4]
 772 0014 0293     		str	r3, [sp, #8]
 773 0016 0393     		str	r3, [sp, #12]
 774 0018 0493     		str	r3, [sp, #16]
 775 001a 0593     		str	r3, [sp, #20]
 776 001c 0693     		str	r3, [sp, #24]
 777 001e 0793     		str	r3, [sp, #28]
 287:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 778              		.loc 1 287 3 is_stmt 1 view .LVU191
 287:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 779              		.loc 1 287 18 is_stmt 0 view .LVU192
 780 0020 3648     		ldr	r0, .L46
 781 0022 4FF08042 		mov	r2, #1073741824
 782 0026 0260     		str	r2, [r0]
 288:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 783              		.loc 1 288 3 is_stmt 1 view .LVU193
 288:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 784              		.loc 1 288 24 is_stmt 0 view .LVU194
 785 0028 4360     		str	r3, [r0, #4]
 289:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks - 1;
 786              		.loc 1 289 3 is_stmt 1 view .LVU195
 289:Core/Src/main.c ****   htim2.Init.Period = TIM2_Ticks - 1;
 787              		.loc 1 289 26 is_stmt 0 view .LVU196
 788 002a 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 43


 290:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 789              		.loc 1 290 3 is_stmt 1 view .LVU197
 290:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 790              		.loc 1 290 34 is_stmt 0 view .LVU198
 791 002c 344A     		ldr	r2, .L46+4
 792 002e 1268     		ldr	r2, [r2]
 793 0030 013A     		subs	r2, r2, #1
 290:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 794              		.loc 1 290 21 view .LVU199
 795 0032 C260     		str	r2, [r0, #12]
 291:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 796              		.loc 1 291 3 is_stmt 1 view .LVU200
 291:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 797              		.loc 1 291 28 is_stmt 0 view .LVU201
 798 0034 0361     		str	r3, [r0, #16]
 292:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 799              		.loc 1 292 3 is_stmt 1 view .LVU202
 292:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 800              		.loc 1 292 32 is_stmt 0 view .LVU203
 801 0036 8361     		str	r3, [r0, #24]
 293:Core/Src/main.c ****   {
 802              		.loc 1 293 3 is_stmt 1 view .LVU204
 293:Core/Src/main.c ****   {
 803              		.loc 1 293 7 is_stmt 0 view .LVU205
 804 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 805              	.LVL53:
 293:Core/Src/main.c ****   {
 806              		.loc 1 293 6 discriminator 1 view .LVU206
 807 003c 0028     		cmp	r0, #0
 808 003e 50D1     		bne	.L40
 297:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 809              		.loc 1 297 3 is_stmt 1 view .LVU207
 297:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 810              		.loc 1 297 34 is_stmt 0 view .LVU208
 811 0040 4FF48053 		mov	r3, #4096
 812 0044 0A93     		str	r3, [sp, #40]
 298:Core/Src/main.c ****   {
 813              		.loc 1 298 3 is_stmt 1 view .LVU209
 298:Core/Src/main.c ****   {
 814              		.loc 1 298 7 is_stmt 0 view .LVU210
 815 0046 0AA9     		add	r1, sp, #40
 816 0048 2C48     		ldr	r0, .L46
 817 004a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 818              	.LVL54:
 298:Core/Src/main.c ****   {
 819              		.loc 1 298 6 discriminator 1 view .LVU211
 820 004e 0028     		cmp	r0, #0
 821 0050 49D1     		bne	.L41
 302:Core/Src/main.c ****   {
 822              		.loc 1 302 3 is_stmt 1 view .LVU212
 302:Core/Src/main.c ****   {
 823              		.loc 1 302 7 is_stmt 0 view .LVU213
 824 0052 2A48     		ldr	r0, .L46
 825 0054 FFF7FEFF 		bl	HAL_TIM_OC_Init
 826              	.LVL55:
 302:Core/Src/main.c ****   {
 827              		.loc 1 302 6 discriminator 1 view .LVU214
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 44


 828 0058 0028     		cmp	r0, #0
 829 005a 46D1     		bne	.L42
 306:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 830              		.loc 1 306 3 is_stmt 1 view .LVU215
 306:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 831              		.loc 1 306 37 is_stmt 0 view .LVU216
 832 005c 0023     		movs	r3, #0
 833 005e 0893     		str	r3, [sp, #32]
 307:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 834              		.loc 1 307 3 is_stmt 1 view .LVU217
 307:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 835              		.loc 1 307 33 is_stmt 0 view .LVU218
 836 0060 0993     		str	r3, [sp, #36]
 308:Core/Src/main.c ****   {
 837              		.loc 1 308 3 is_stmt 1 view .LVU219
 308:Core/Src/main.c ****   {
 838              		.loc 1 308 7 is_stmt 0 view .LVU220
 839 0062 08A9     		add	r1, sp, #32
 840 0064 2548     		ldr	r0, .L46
 841 0066 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 842              	.LVL56:
 308:Core/Src/main.c ****   {
 843              		.loc 1 308 6 discriminator 1 view .LVU221
 844 006a 0028     		cmp	r0, #0
 845 006c 3FD1     		bne	.L43
 312:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 846              		.loc 1 312 3 is_stmt 1 view .LVU222
 312:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 847              		.loc 1 312 20 is_stmt 0 view .LVU223
 848 006e 0022     		movs	r2, #0
 849 0070 0192     		str	r2, [sp, #4]
 313:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 850              		.loc 1 313 3 is_stmt 1 view .LVU224
 313:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 851              		.loc 1 313 19 is_stmt 0 view .LVU225
 852 0072 0292     		str	r2, [sp, #8]
 314:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 853              		.loc 1 314 3 is_stmt 1 view .LVU226
 314:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 854              		.loc 1 314 24 is_stmt 0 view .LVU227
 855 0074 0392     		str	r2, [sp, #12]
 315:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 856              		.loc 1 315 3 is_stmt 1 view .LVU228
 315:Core/Src/main.c ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 857              		.loc 1 315 24 is_stmt 0 view .LVU229
 858 0076 0592     		str	r2, [sp, #20]
 316:Core/Src/main.c ****   {
 859              		.loc 1 316 3 is_stmt 1 view .LVU230
 316:Core/Src/main.c ****   {
 860              		.loc 1 316 7 is_stmt 0 view .LVU231
 861 0078 01A9     		add	r1, sp, #4
 862 007a 2048     		ldr	r0, .L46
 863 007c FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 864              	.LVL57:
 316:Core/Src/main.c ****   {
 865              		.loc 1 316 6 discriminator 1 view .LVU232
 866 0080 0028     		cmp	r0, #0
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 45


 867 0082 36D1     		bne	.L44
 322:Core/Src/main.c **** 
 868              		.loc 1 322 3 is_stmt 1 view .LVU233
 869              	.LBB15:
 322:Core/Src/main.c **** 
 870              		.loc 1 322 3 view .LVU234
 871 0084 0023     		movs	r3, #0
 872 0086 0093     		str	r3, [sp]
 322:Core/Src/main.c **** 
 873              		.loc 1 322 3 view .LVU235
 874 0088 1E4A     		ldr	r2, .L46+8
 875 008a 116B     		ldr	r1, [r2, #48]
 876 008c 41F40011 		orr	r1, r1, #2097152
 877 0090 1163     		str	r1, [r2, #48]
 322:Core/Src/main.c **** 
 878              		.loc 1 322 3 view .LVU236
 879 0092 126B     		ldr	r2, [r2, #48]
 880 0094 02F40012 		and	r2, r2, #2097152
 881 0098 0092     		str	r2, [sp]
 322:Core/Src/main.c **** 
 882              		.loc 1 322 3 view .LVU237
 883 009a 009A     		ldr	r2, [sp]
 884              	.LBE15:
 322:Core/Src/main.c **** 
 885              		.loc 1 322 3 view .LVU238
 324:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 886              		.loc 1 324 3 view .LVU239
 324:Core/Src/main.c ****   hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;         // TIM2_CH1 is on channel 3
 887              		.loc 1 324 26 is_stmt 0 view .LVU240
 888 009c 1A48     		ldr	r0, .L46+12
 889 009e 1B4A     		ldr	r2, .L46+16
 890 00a0 0260     		str	r2, [r0]
 325:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 891              		.loc 1 325 3 is_stmt 1 view .LVU241
 325:Core/Src/main.c ****   hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH; // Memory -> TIM3->CCR3
 892              		.loc 1 325 30 is_stmt 0 view .LVU242
 893 00a2 4FF0C062 		mov	r2, #100663296
 894 00a6 4260     		str	r2, [r0, #4]
 326:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 895              		.loc 1 326 3 is_stmt 1 view .LVU243
 326:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;    // Peripheral address fixed
 896              		.loc 1 326 32 is_stmt 0 view .LVU244
 897 00a8 4022     		movs	r2, #64
 898 00aa 8260     		str	r2, [r0, #8]
 327:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 899              		.loc 1 327 3 is_stmt 1 view .LVU245
 327:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;        // Memory address increments
 900              		.loc 1 327 32 is_stmt 0 view .LVU246
 901 00ac C360     		str	r3, [r0, #12]
 328:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 902              		.loc 1 328 3 is_stmt 1 view .LVU247
 328:Core/Src/main.c ****   hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 903              		.loc 1 328 29 is_stmt 0 view .LVU248
 904 00ae 4FF48062 		mov	r2, #1024
 905 00b2 0261     		str	r2, [r0, #16]
 329:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 906              		.loc 1 329 3 is_stmt 1 view .LVU249
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 46


 329:Core/Src/main.c ****   hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_WORD;
 907              		.loc 1 329 42 is_stmt 0 view .LVU250
 908 00b4 4FF48052 		mov	r2, #4096
 909 00b8 4261     		str	r2, [r0, #20]
 330:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 910              		.loc 1 330 3 is_stmt 1 view .LVU251
 330:Core/Src/main.c ****   hdma_tim2_ch1.Init.Mode = DMA_CIRCULAR;            // Repeat LUT automatically
 911              		.loc 1 330 39 is_stmt 0 view .LVU252
 912 00ba 4FF48042 		mov	r2, #16384
 913 00be 8261     		str	r2, [r0, #24]
 331:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 914              		.loc 1 331 3 is_stmt 1 view .LVU253
 331:Core/Src/main.c ****   hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_HIGH;
 915              		.loc 1 331 27 is_stmt 0 view .LVU254
 916 00c0 4FF48072 		mov	r2, #256
 917 00c4 C261     		str	r2, [r0, #28]
 332:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 918              		.loc 1 332 3 is_stmt 1 view .LVU255
 332:Core/Src/main.c ****   hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 919              		.loc 1 332 31 is_stmt 0 view .LVU256
 920 00c6 4FF40032 		mov	r2, #131072
 921 00ca 0262     		str	r2, [r0, #32]
 333:Core/Src/main.c **** 
 922              		.loc 1 333 3 is_stmt 1 view .LVU257
 333:Core/Src/main.c **** 
 923              		.loc 1 333 31 is_stmt 0 view .LVU258
 924 00cc 4362     		str	r3, [r0, #36]
 335:Core/Src/main.c ****   {
 925              		.loc 1 335 3 is_stmt 1 view .LVU259
 335:Core/Src/main.c ****   {
 926              		.loc 1 335 7 is_stmt 0 view .LVU260
 927 00ce FFF7FEFF 		bl	HAL_DMA_Init
 928              	.LVL58:
 335:Core/Src/main.c ****   {
 929              		.loc 1 335 6 discriminator 1 view .LVU261
 930 00d2 80B9     		cbnz	r0, .L45
 341:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 931              		.loc 1 341 3 is_stmt 1 view .LVU262
 341:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 932              		.loc 1 341 3 view .LVU263
 933 00d4 094A     		ldr	r2, .L46
 934 00d6 0C4B     		ldr	r3, .L46+12
 935 00d8 5362     		str	r3, [r2, #36]
 341:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 936              		.loc 1 341 3 view .LVU264
 937 00da 9A63     		str	r2, [r3, #56]
 341:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 938              		.loc 1 341 3 view .LVU265
 344:Core/Src/main.c **** 
 939              		.loc 1 344 1 is_stmt 0 view .LVU266
 940 00dc 0FB0     		add	sp, sp, #60
 941              	.LCFI11:
 942              		.cfi_remember_state
 943              		.cfi_def_cfa_offset 4
 944              		@ sp needed
 945 00de 5DF804FB 		ldr	pc, [sp], #4
 946              	.L40:
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 47


 947              	.LCFI12:
 948              		.cfi_restore_state
 295:Core/Src/main.c ****   }
 949              		.loc 1 295 5 is_stmt 1 view .LVU267
 950 00e2 FFF7FEFF 		bl	Error_Handler
 951              	.LVL59:
 952              	.L41:
 300:Core/Src/main.c ****   }
 953              		.loc 1 300 5 view .LVU268
 954 00e6 FFF7FEFF 		bl	Error_Handler
 955              	.LVL60:
 956              	.L42:
 304:Core/Src/main.c ****   }
 957              		.loc 1 304 5 view .LVU269
 958 00ea FFF7FEFF 		bl	Error_Handler
 959              	.LVL61:
 960              	.L43:
 310:Core/Src/main.c ****   }
 961              		.loc 1 310 5 view .LVU270
 962 00ee FFF7FEFF 		bl	Error_Handler
 963              	.LVL62:
 964              	.L44:
 318:Core/Src/main.c ****   }
 965              		.loc 1 318 5 view .LVU271
 966 00f2 FFF7FEFF 		bl	Error_Handler
 967              	.LVL63:
 968              	.L45:
 337:Core/Src/main.c ****   }
 969              		.loc 1 337 7 view .LVU272
 970 00f6 FFF7FEFF 		bl	Error_Handler
 971              	.LVL64:
 972              	.L47:
 973 00fa 00BF     		.align	2
 974              	.L46:
 975 00fc 00000000 		.word	htim2
 976 0100 00000000 		.word	TIM2_Ticks
 977 0104 00380240 		.word	1073887232
 978 0108 00000000 		.word	hdma_tim2_ch1
 979 010c 88600240 		.word	1073897608
 980              		.cfi_endproc
 981              	.LFE141:
 983              		.section	.text.MX_TIM3_Init,"ax",%progbits
 984              		.align	1
 985              		.syntax unified
 986              		.thumb
 987              		.thumb_func
 989              	MX_TIM3_Init:
 990              	.LFB142:
 352:Core/Src/main.c **** 
 991              		.loc 1 352 1 view -0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 56
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995 0000 00B5     		push	{lr}
 996              	.LCFI13:
 997              		.cfi_def_cfa_offset 4
 998              		.cfi_offset 14, -4
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 48


 999 0002 8FB0     		sub	sp, sp, #60
 1000              	.LCFI14:
 1001              		.cfi_def_cfa_offset 64
 358:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1002              		.loc 1 358 3 view .LVU274
 358:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1003              		.loc 1 358 26 is_stmt 0 view .LVU275
 1004 0004 0023     		movs	r3, #0
 1005 0006 0A93     		str	r3, [sp, #40]
 1006 0008 0B93     		str	r3, [sp, #44]
 1007 000a 0C93     		str	r3, [sp, #48]
 1008 000c 0D93     		str	r3, [sp, #52]
 359:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1009              		.loc 1 359 3 is_stmt 1 view .LVU276
 359:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1010              		.loc 1 359 27 is_stmt 0 view .LVU277
 1011 000e 0893     		str	r3, [sp, #32]
 1012 0010 0993     		str	r3, [sp, #36]
 360:Core/Src/main.c **** 
 1013              		.loc 1 360 3 is_stmt 1 view .LVU278
 360:Core/Src/main.c **** 
 1014              		.loc 1 360 22 is_stmt 0 view .LVU279
 1015 0012 0193     		str	r3, [sp, #4]
 1016 0014 0293     		str	r3, [sp, #8]
 1017 0016 0393     		str	r3, [sp, #12]
 1018 0018 0493     		str	r3, [sp, #16]
 1019 001a 0593     		str	r3, [sp, #20]
 1020 001c 0693     		str	r3, [sp, #24]
 1021 001e 0793     		str	r3, [sp, #28]
 365:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1022              		.loc 1 365 3 is_stmt 1 view .LVU280
 365:Core/Src/main.c ****   htim3.Init.Prescaler = 0;
 1023              		.loc 1 365 18 is_stmt 0 view .LVU281
 1024 0020 1E48     		ldr	r0, .L60
 1025 0022 1F4A     		ldr	r2, .L60+4
 1026 0024 0260     		str	r2, [r0]
 366:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1027              		.loc 1 366 3 is_stmt 1 view .LVU282
 366:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 1028              		.loc 1 366 24 is_stmt 0 view .LVU283
 1029 0026 4360     		str	r3, [r0, #4]
 367:Core/Src/main.c ****   htim3.Init.Period = 4095; // 12-bit resolution
 1030              		.loc 1 367 3 is_stmt 1 view .LVU284
 367:Core/Src/main.c ****   htim3.Init.Period = 4095; // 12-bit resolution
 1031              		.loc 1 367 26 is_stmt 0 view .LVU285
 1032 0028 8360     		str	r3, [r0, #8]
 368:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1033              		.loc 1 368 3 is_stmt 1 view .LVU286
 368:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1034              		.loc 1 368 21 is_stmt 0 view .LVU287
 1035 002a 40F6FF72 		movw	r2, #4095
 1036 002e C260     		str	r2, [r0, #12]
 369:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1037              		.loc 1 369 3 is_stmt 1 view .LVU288
 369:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1038              		.loc 1 369 28 is_stmt 0 view .LVU289
 1039 0030 0361     		str	r3, [r0, #16]
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 49


 370:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1040              		.loc 1 370 3 is_stmt 1 view .LVU290
 370:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 1041              		.loc 1 370 32 is_stmt 0 view .LVU291
 1042 0032 8361     		str	r3, [r0, #24]
 371:Core/Src/main.c ****   {
 1043              		.loc 1 371 3 is_stmt 1 view .LVU292
 371:Core/Src/main.c ****   {
 1044              		.loc 1 371 7 is_stmt 0 view .LVU293
 1045 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1046              	.LVL65:
 371:Core/Src/main.c ****   {
 1047              		.loc 1 371 6 discriminator 1 view .LVU294
 1048 0038 28BB     		cbnz	r0, .L55
 375:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1049              		.loc 1 375 3 is_stmt 1 view .LVU295
 375:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 1050              		.loc 1 375 34 is_stmt 0 view .LVU296
 1051 003a 4FF48053 		mov	r3, #4096
 1052 003e 0A93     		str	r3, [sp, #40]
 376:Core/Src/main.c ****   {
 1053              		.loc 1 376 3 is_stmt 1 view .LVU297
 376:Core/Src/main.c ****   {
 1054              		.loc 1 376 7 is_stmt 0 view .LVU298
 1055 0040 0AA9     		add	r1, sp, #40
 1056 0042 1648     		ldr	r0, .L60
 1057 0044 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1058              	.LVL66:
 376:Core/Src/main.c ****   {
 1059              		.loc 1 376 6 discriminator 1 view .LVU299
 1060 0048 F8B9     		cbnz	r0, .L56
 380:Core/Src/main.c ****   {
 1061              		.loc 1 380 3 is_stmt 1 view .LVU300
 380:Core/Src/main.c ****   {
 1062              		.loc 1 380 7 is_stmt 0 view .LVU301
 1063 004a 1448     		ldr	r0, .L60
 1064 004c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1065              	.LVL67:
 380:Core/Src/main.c ****   {
 1066              		.loc 1 380 6 discriminator 1 view .LVU302
 1067 0050 E8B9     		cbnz	r0, .L57
 384:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1068              		.loc 1 384 3 is_stmt 1 view .LVU303
 384:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1069              		.loc 1 384 37 is_stmt 0 view .LVU304
 1070 0052 0023     		movs	r3, #0
 1071 0054 0893     		str	r3, [sp, #32]
 385:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1072              		.loc 1 385 3 is_stmt 1 view .LVU305
 385:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 1073              		.loc 1 385 33 is_stmt 0 view .LVU306
 1074 0056 0993     		str	r3, [sp, #36]
 386:Core/Src/main.c ****   {
 1075              		.loc 1 386 3 is_stmt 1 view .LVU307
 386:Core/Src/main.c ****   {
 1076              		.loc 1 386 7 is_stmt 0 view .LVU308
 1077 0058 08A9     		add	r1, sp, #32
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 50


 1078 005a 1048     		ldr	r0, .L60
 1079 005c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1080              	.LVL68:
 386:Core/Src/main.c ****   {
 1081              		.loc 1 386 6 discriminator 1 view .LVU309
 1082 0060 B8B9     		cbnz	r0, .L58
 390:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1083              		.loc 1 390 3 is_stmt 1 view .LVU310
 390:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 1084              		.loc 1 390 20 is_stmt 0 view .LVU311
 1085 0062 6023     		movs	r3, #96
 1086 0064 0193     		str	r3, [sp, #4]
 391:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1087              		.loc 1 391 3 is_stmt 1 view .LVU312
 391:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1088              		.loc 1 391 19 is_stmt 0 view .LVU313
 1089 0066 0023     		movs	r3, #0
 1090 0068 0293     		str	r3, [sp, #8]
 392:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1091              		.loc 1 392 3 is_stmt 1 view .LVU314
 392:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1092              		.loc 1 392 24 is_stmt 0 view .LVU315
 1093 006a 0393     		str	r3, [sp, #12]
 393:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1094              		.loc 1 393 3 is_stmt 1 view .LVU316
 393:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 1095              		.loc 1 393 24 is_stmt 0 view .LVU317
 1096 006c 0593     		str	r3, [sp, #20]
 394:Core/Src/main.c ****   {
 1097              		.loc 1 394 3 is_stmt 1 view .LVU318
 394:Core/Src/main.c ****   {
 1098              		.loc 1 394 7 is_stmt 0 view .LVU319
 1099 006e 0822     		movs	r2, #8
 1100 0070 01A9     		add	r1, sp, #4
 1101 0072 0A48     		ldr	r0, .L60
 1102 0074 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1103              	.LVL69:
 394:Core/Src/main.c ****   {
 1104              		.loc 1 394 6 discriminator 1 view .LVU320
 1105 0078 68B9     		cbnz	r0, .L59
 401:Core/Src/main.c **** 
 1106              		.loc 1 401 3 is_stmt 1 view .LVU321
 1107 007a 0848     		ldr	r0, .L60
 1108 007c FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1109              	.LVL70:
 403:Core/Src/main.c **** 
 1110              		.loc 1 403 1 is_stmt 0 view .LVU322
 1111 0080 0FB0     		add	sp, sp, #60
 1112              	.LCFI15:
 1113              		.cfi_remember_state
 1114              		.cfi_def_cfa_offset 4
 1115              		@ sp needed
 1116 0082 5DF804FB 		ldr	pc, [sp], #4
 1117              	.L55:
 1118              	.LCFI16:
 1119              		.cfi_restore_state
 373:Core/Src/main.c ****   }
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 51


 1120              		.loc 1 373 5 is_stmt 1 view .LVU323
 1121 0086 FFF7FEFF 		bl	Error_Handler
 1122              	.LVL71:
 1123              	.L56:
 378:Core/Src/main.c ****   }
 1124              		.loc 1 378 5 view .LVU324
 1125 008a FFF7FEFF 		bl	Error_Handler
 1126              	.LVL72:
 1127              	.L57:
 382:Core/Src/main.c ****   }
 1128              		.loc 1 382 5 view .LVU325
 1129 008e FFF7FEFF 		bl	Error_Handler
 1130              	.LVL73:
 1131              	.L58:
 388:Core/Src/main.c ****   }
 1132              		.loc 1 388 5 view .LVU326
 1133 0092 FFF7FEFF 		bl	Error_Handler
 1134              	.LVL74:
 1135              	.L59:
 396:Core/Src/main.c ****   }
 1136              		.loc 1 396 5 view .LVU327
 1137 0096 FFF7FEFF 		bl	Error_Handler
 1138              	.LVL75:
 1139              	.L61:
 1140 009a 00BF     		.align	2
 1141              	.L60:
 1142 009c 00000000 		.word	htim3
 1143 00a0 00040040 		.word	1073742848
 1144              		.cfi_endproc
 1145              	.LFE142:
 1147              		.section	.text.SystemClock_Config,"ax",%progbits
 1148              		.align	1
 1149              		.global	SystemClock_Config
 1150              		.syntax unified
 1151              		.thumb
 1152              		.thumb_func
 1154              	SystemClock_Config:
 1155              	.LFB140:
 232:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1156              		.loc 1 232 1 view -0
 1157              		.cfi_startproc
 1158              		@ args = 0, pretend = 0, frame = 80
 1159              		@ frame_needed = 0, uses_anonymous_args = 0
 1160 0000 00B5     		push	{lr}
 1161              	.LCFI17:
 1162              		.cfi_def_cfa_offset 4
 1163              		.cfi_offset 14, -4
 1164 0002 95B0     		sub	sp, sp, #84
 1165              	.LCFI18:
 1166              		.cfi_def_cfa_offset 88
 233:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1167              		.loc 1 233 3 view .LVU329
 233:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1168              		.loc 1 233 22 is_stmt 0 view .LVU330
 1169 0004 3422     		movs	r2, #52
 1170 0006 0021     		movs	r1, #0
 1171 0008 07A8     		add	r0, sp, #28
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 52


 1172 000a FFF7FEFF 		bl	memset
 1173              	.LVL76:
 234:Core/Src/main.c **** 
 1174              		.loc 1 234 3 is_stmt 1 view .LVU331
 234:Core/Src/main.c **** 
 1175              		.loc 1 234 22 is_stmt 0 view .LVU332
 1176 000e 0023     		movs	r3, #0
 1177 0010 0293     		str	r3, [sp, #8]
 1178 0012 0393     		str	r3, [sp, #12]
 1179 0014 0493     		str	r3, [sp, #16]
 1180 0016 0593     		str	r3, [sp, #20]
 1181 0018 0693     		str	r3, [sp, #24]
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1182              		.loc 1 238 3 is_stmt 1 view .LVU333
 1183              	.LBB16:
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1184              		.loc 1 238 3 view .LVU334
 1185 001a 0093     		str	r3, [sp]
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1186              		.loc 1 238 3 view .LVU335
 1187 001c 194A     		ldr	r2, .L68
 1188 001e 116C     		ldr	r1, [r2, #64]
 1189 0020 41F08051 		orr	r1, r1, #268435456
 1190 0024 1164     		str	r1, [r2, #64]
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1191              		.loc 1 238 3 view .LVU336
 1192 0026 126C     		ldr	r2, [r2, #64]
 1193 0028 02F08052 		and	r2, r2, #268435456
 1194 002c 0092     		str	r2, [sp]
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1195              		.loc 1 238 3 view .LVU337
 1196 002e 009A     		ldr	r2, [sp]
 1197              	.LBE16:
 238:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 1198              		.loc 1 238 3 view .LVU338
 239:Core/Src/main.c **** 
 1199              		.loc 1 239 3 view .LVU339
 1200              	.LBB17:
 239:Core/Src/main.c **** 
 1201              		.loc 1 239 3 view .LVU340
 1202 0030 0193     		str	r3, [sp, #4]
 239:Core/Src/main.c **** 
 1203              		.loc 1 239 3 view .LVU341
 1204 0032 1549     		ldr	r1, .L68+4
 1205 0034 0A68     		ldr	r2, [r1]
 1206 0036 22F44042 		bic	r2, r2, #49152
 1207 003a 42F48042 		orr	r2, r2, #16384
 1208 003e 0A60     		str	r2, [r1]
 239:Core/Src/main.c **** 
 1209              		.loc 1 239 3 view .LVU342
 1210 0040 0A68     		ldr	r2, [r1]
 1211 0042 02F44042 		and	r2, r2, #49152
 1212 0046 0192     		str	r2, [sp, #4]
 239:Core/Src/main.c **** 
 1213              		.loc 1 239 3 view .LVU343
 1214 0048 019A     		ldr	r2, [sp, #4]
 1215              	.LBE17:
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 53


 239:Core/Src/main.c **** 
 1216              		.loc 1 239 3 view .LVU344
 244:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1217              		.loc 1 244 3 view .LVU345
 244:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1218              		.loc 1 244 36 is_stmt 0 view .LVU346
 1219 004a 0222     		movs	r2, #2
 1220 004c 0792     		str	r2, [sp, #28]
 245:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1221              		.loc 1 245 3 is_stmt 1 view .LVU347
 245:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1222              		.loc 1 245 30 is_stmt 0 view .LVU348
 1223 004e 0122     		movs	r2, #1
 1224 0050 0A92     		str	r2, [sp, #40]
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1225              		.loc 1 246 3 is_stmt 1 view .LVU349
 246:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1226              		.loc 1 246 41 is_stmt 0 view .LVU350
 1227 0052 1022     		movs	r2, #16
 1228 0054 0B92     		str	r2, [sp, #44]
 247:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1229              		.loc 1 247 3 is_stmt 1 view .LVU351
 247:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1230              		.loc 1 247 34 is_stmt 0 view .LVU352
 1231 0056 0D93     		str	r3, [sp, #52]
 248:Core/Src/main.c ****   {
 1232              		.loc 1 248 3 is_stmt 1 view .LVU353
 248:Core/Src/main.c ****   {
 1233              		.loc 1 248 7 is_stmt 0 view .LVU354
 1234 0058 07A8     		add	r0, sp, #28
 1235 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 1236              	.LVL77:
 248:Core/Src/main.c ****   {
 1237              		.loc 1 248 6 discriminator 1 view .LVU355
 1238 005e 68B9     		cbnz	r0, .L66
 255:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1239              		.loc 1 255 3 is_stmt 1 view .LVU356
 255:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1240              		.loc 1 255 31 is_stmt 0 view .LVU357
 1241 0060 0F23     		movs	r3, #15
 1242 0062 0293     		str	r3, [sp, #8]
 257:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1243              		.loc 1 257 3 is_stmt 1 view .LVU358
 257:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1244              		.loc 1 257 34 is_stmt 0 view .LVU359
 1245 0064 0021     		movs	r1, #0
 1246 0066 0391     		str	r1, [sp, #12]
 258:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1247              		.loc 1 258 3 is_stmt 1 view .LVU360
 258:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1248              		.loc 1 258 35 is_stmt 0 view .LVU361
 1249 0068 0491     		str	r1, [sp, #16]
 259:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1250              		.loc 1 259 3 is_stmt 1 view .LVU362
 259:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1251              		.loc 1 259 36 is_stmt 0 view .LVU363
 1252 006a 0591     		str	r1, [sp, #20]
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 54


 260:Core/Src/main.c **** 
 1253              		.loc 1 260 3 is_stmt 1 view .LVU364
 260:Core/Src/main.c **** 
 1254              		.loc 1 260 36 is_stmt 0 view .LVU365
 1255 006c 0691     		str	r1, [sp, #24]
 262:Core/Src/main.c ****   {
 1256              		.loc 1 262 3 is_stmt 1 view .LVU366
 262:Core/Src/main.c ****   {
 1257              		.loc 1 262 7 is_stmt 0 view .LVU367
 1258 006e 02A8     		add	r0, sp, #8
 1259 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1260              	.LVL78:
 262:Core/Src/main.c ****   {
 1261              		.loc 1 262 6 discriminator 1 view .LVU368
 1262 0074 20B9     		cbnz	r0, .L67
 266:Core/Src/main.c **** 
 1263              		.loc 1 266 1 view .LVU369
 1264 0076 15B0     		add	sp, sp, #84
 1265              	.LCFI19:
 1266              		.cfi_remember_state
 1267              		.cfi_def_cfa_offset 4
 1268              		@ sp needed
 1269 0078 5DF804FB 		ldr	pc, [sp], #4
 1270              	.L66:
 1271              	.LCFI20:
 1272              		.cfi_restore_state
 250:Core/Src/main.c ****   }
 1273              		.loc 1 250 5 is_stmt 1 view .LVU370
 1274 007c FFF7FEFF 		bl	Error_Handler
 1275              	.LVL79:
 1276              	.L67:
 264:Core/Src/main.c ****   }
 1277              		.loc 1 264 5 view .LVU371
 1278 0080 FFF7FEFF 		bl	Error_Handler
 1279              	.LVL80:
 1280              	.L69:
 1281              		.align	2
 1282              	.L68:
 1283 0084 00380240 		.word	1073887232
 1284 0088 00700040 		.word	1073770496
 1285              		.cfi_endproc
 1286              	.LFE140:
 1288              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1289              		.align	2
 1290              	.LC7:
 1291 0000 57617665 		.ascii	"Wave: \000"
 1291      3A2000
 1292              		.section	.text.main,"ax",%progbits
 1293              		.align	1
 1294              		.global	main
 1295              		.syntax unified
 1296              		.thumb
 1297              		.thumb_func
 1299              	main:
 1300              	.LFB139:
 142:Core/Src/main.c **** 
 1301              		.loc 1 142 1 view -0
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 55


 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 16
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305 0000 10B5     		push	{r4, lr}
 1306              	.LCFI21:
 1307              		.cfi_def_cfa_offset 8
 1308              		.cfi_offset 4, -8
 1309              		.cfi_offset 14, -4
 1310 0002 84B0     		sub	sp, sp, #16
 1311              	.LCFI22:
 1312              		.cfi_def_cfa_offset 24
 147:Core/Src/main.c ****   // Set PB7 as output
 1313              		.loc 1 147 3 view .LVU373
 147:Core/Src/main.c ****   // Set PB7 as output
 1314              		.loc 1 147 6 is_stmt 0 view .LVU374
 1315 0004 414A     		ldr	r2, .L85
 1316 0006 136B     		ldr	r3, [r2, #48]
 147:Core/Src/main.c ****   // Set PB7 as output
 1317              		.loc 1 147 16 view .LVU375
 1318 0008 43F00203 		orr	r3, r3, #2
 1319 000c 1363     		str	r3, [r2, #48]
 149:Core/Src/main.c ****   GPIOB->MODER |= GPIO_MODER_MODER7_0;
 1320              		.loc 1 149 3 is_stmt 1 view .LVU376
 149:Core/Src/main.c ****   GPIOB->MODER |= GPIO_MODER_MODER7_0;
 1321              		.loc 1 149 8 is_stmt 0 view .LVU377
 1322 000e 404B     		ldr	r3, .L85+4
 1323 0010 1A68     		ldr	r2, [r3]
 149:Core/Src/main.c ****   GPIOB->MODER |= GPIO_MODER_MODER7_0;
 1324              		.loc 1 149 16 view .LVU378
 1325 0012 22F44042 		bic	r2, r2, #49152
 1326 0016 1A60     		str	r2, [r3]
 150:Core/Src/main.c ****   // Blink a few times
 1327              		.loc 1 150 3 is_stmt 1 view .LVU379
 150:Core/Src/main.c ****   // Blink a few times
 1328              		.loc 1 150 8 is_stmt 0 view .LVU380
 1329 0018 1A68     		ldr	r2, [r3]
 150:Core/Src/main.c ****   // Blink a few times
 1330              		.loc 1 150 16 view .LVU381
 1331 001a 42F48042 		orr	r2, r2, #16384
 1332 001e 1A60     		str	r2, [r3]
 152:Core/Src/main.c ****     // PB7 high
 1333              		.loc 1 152 3 is_stmt 1 view .LVU382
 1334              	.LBB18:
 152:Core/Src/main.c ****     // PB7 high
 1335              		.loc 1 152 8 view .LVU383
 152:Core/Src/main.c ****     // PB7 high
 1336              		.loc 1 152 26 is_stmt 0 view .LVU384
 1337 0020 0023     		movs	r3, #0
 1338 0022 0193     		str	r3, [sp, #4]
 152:Core/Src/main.c ****     // PB7 high
 1339              		.loc 1 152 3 view .LVU385
 1340 0024 19E0     		b	.L71
 1341              	.L73:
 1342              	.LBB19:
 155:Core/Src/main.c ****     // PB7 low
 1343              		.loc 1 155 54 is_stmt 1 discriminator 3 view .LVU386
 1344              		.syntax unified
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 56


 1345              	@ 155 "Core/Src/main.c" 1
 1346 0026 00BF     		nop
 1347              	@ 0 "" 2
 155:Core/Src/main.c ****     // PB7 low
 1348              		.loc 1 155 47 discriminator 3 view .LVU387
 1349              		.thumb
 1350              		.syntax unified
 1351 0028 029B     		ldr	r3, [sp, #8]
 1352 002a 0133     		adds	r3, r3, #1
 1353 002c 0293     		str	r3, [sp, #8]
 1354              	.L72:
 155:Core/Src/main.c ****     // PB7 low
 1355              		.loc 1 155 37 discriminator 1 view .LVU388
 1356 002e 029A     		ldr	r2, [sp, #8]
 1357 0030 384B     		ldr	r3, .L85+8
 1358 0032 9A42     		cmp	r2, r3
 1359 0034 F7D9     		bls	.L73
 1360              	.LBE19:
 157:Core/Src/main.c ****     for (volatile uint32_t d = 0; d < 200000; ++d) { __NOP(); }
 1361              		.loc 1 157 5 view .LVU389
 157:Core/Src/main.c ****     for (volatile uint32_t d = 0; d < 200000; ++d) { __NOP(); }
 1362              		.loc 1 157 17 is_stmt 0 view .LVU390
 1363 0036 364B     		ldr	r3, .L85+4
 1364 0038 4FF40002 		mov	r2, #8388608
 1365 003c 9A61     		str	r2, [r3, #24]
 158:Core/Src/main.c ****   }
 1366              		.loc 1 158 5 is_stmt 1 view .LVU391
 1367              	.LBB20:
 158:Core/Src/main.c ****   }
 1368              		.loc 1 158 10 view .LVU392
 158:Core/Src/main.c ****   }
 1369              		.loc 1 158 28 is_stmt 0 view .LVU393
 1370 003e 0023     		movs	r3, #0
 1371 0040 0393     		str	r3, [sp, #12]
 158:Core/Src/main.c ****   }
 1372              		.loc 1 158 5 view .LVU394
 1373 0042 03E0     		b	.L74
 1374              	.L75:
 158:Core/Src/main.c ****   }
 1375              		.loc 1 158 54 is_stmt 1 discriminator 3 view .LVU395
 1376              		.syntax unified
 1377              	@ 158 "Core/Src/main.c" 1
 1378 0044 00BF     		nop
 1379              	@ 0 "" 2
 158:Core/Src/main.c ****   }
 1380              		.loc 1 158 47 discriminator 3 view .LVU396
 1381              		.thumb
 1382              		.syntax unified
 1383 0046 039B     		ldr	r3, [sp, #12]
 1384 0048 0133     		adds	r3, r3, #1
 1385 004a 0393     		str	r3, [sp, #12]
 1386              	.L74:
 158:Core/Src/main.c ****   }
 1387              		.loc 1 158 37 discriminator 1 view .LVU397
 1388 004c 039A     		ldr	r2, [sp, #12]
 1389 004e 314B     		ldr	r3, .L85+8
 1390 0050 9A42     		cmp	r2, r3
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 57


 1391 0052 F7D9     		bls	.L75
 1392              	.LBE20:
 152:Core/Src/main.c ****     // PB7 high
 1393              		.loc 1 152 40 discriminator 2 view .LVU398
 1394 0054 019B     		ldr	r3, [sp, #4]
 1395 0056 0133     		adds	r3, r3, #1
 1396 0058 0193     		str	r3, [sp, #4]
 1397              	.L71:
 152:Core/Src/main.c ****     // PB7 high
 1398              		.loc 1 152 35 discriminator 1 view .LVU399
 1399 005a 019B     		ldr	r3, [sp, #4]
 1400 005c 022B     		cmp	r3, #2
 1401 005e 05D8     		bhi	.L83
 154:Core/Src/main.c ****     for (volatile uint32_t d = 0; d < 200000; ++d) { __NOP(); }
 1402              		.loc 1 154 5 view .LVU400
 154:Core/Src/main.c ****     for (volatile uint32_t d = 0; d < 200000; ++d) { __NOP(); }
 1403              		.loc 1 154 17 is_stmt 0 view .LVU401
 1404 0060 2B4B     		ldr	r3, .L85+4
 1405 0062 8022     		movs	r2, #128
 1406 0064 9A61     		str	r2, [r3, #24]
 155:Core/Src/main.c ****     // PB7 low
 1407              		.loc 1 155 5 is_stmt 1 view .LVU402
 1408              	.LBB21:
 155:Core/Src/main.c ****     // PB7 low
 1409              		.loc 1 155 10 view .LVU403
 155:Core/Src/main.c ****     // PB7 low
 1410              		.loc 1 155 28 is_stmt 0 view .LVU404
 1411 0066 0023     		movs	r3, #0
 1412 0068 0293     		str	r3, [sp, #8]
 155:Core/Src/main.c ****     // PB7 low
 1413              		.loc 1 155 5 view .LVU405
 1414 006a E0E7     		b	.L72
 1415              	.L83:
 1416              	.LBE21:
 1417              	.LBE18:
 166:Core/Src/main.c **** 
 1418              		.loc 1 166 3 is_stmt 1 view .LVU406
 1419 006c FFF7FEFF 		bl	HAL_Init
 1420              	.LVL81:
 173:Core/Src/main.c **** 
 1421              		.loc 1 173 3 view .LVU407
 1422 0070 FFF7FEFF 		bl	SystemClock_Config
 1423              	.LVL82:
 180:Core/Src/main.c ****   MX_DMA_Init();
 1424              		.loc 1 180 3 view .LVU408
 1425 0074 FFF7FEFF 		bl	MX_GPIO_Init
 1426              	.LVL83:
 181:Core/Src/main.c ****   MX_TIM2_Init();
 1427              		.loc 1 181 3 view .LVU409
 1428 0078 FFF7FEFF 		bl	MX_DMA_Init
 1429              	.LVL84:
 182:Core/Src/main.c ****   MX_TIM3_Init();
 1430              		.loc 1 182 3 view .LVU410
 1431 007c FFF7FEFF 		bl	MX_TIM2_Init
 1432              	.LVL85:
 183:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1433              		.loc 1 183 3 view .LVU411
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 58


 1434 0080 FFF7FEFF 		bl	MX_TIM3_Init
 1435              	.LVL86:
 185:Core/Src/main.c ****   g_wave_index = 0;
 1436              		.loc 1 185 3 view .LVU412
 1437 0084 FFF7FEFF 		bl	Generate_LUTs
 1438              	.LVL87:
 186:Core/Src/main.c ****   g_current_lut = Sin_LUT;
 1439              		.loc 1 186 3 view .LVU413
 186:Core/Src/main.c ****   g_current_lut = Sin_LUT;
 1440              		.loc 1 186 16 is_stmt 0 view .LVU414
 1441 0088 234C     		ldr	r4, .L85+12
 1442 008a 0023     		movs	r3, #0
 1443 008c 2370     		strb	r3, [r4]
 187:Core/Src/main.c **** 
 1444              		.loc 1 187 3 is_stmt 1 view .LVU415
 187:Core/Src/main.c **** 
 1445              		.loc 1 187 17 is_stmt 0 view .LVU416
 1446 008e 234B     		ldr	r3, .L85+16
 1447 0090 234A     		ldr	r2, .L85+20
 1448 0092 1A60     		str	r2, [r3]
 190:Core/Src/main.c ****   lcd_command(CLEAR);
 1449              		.loc 1 190 3 is_stmt 1 view .LVU417
 1450 0094 FFF7FEFF 		bl	init_LCD
 1451              	.LVL88:
 191:Core/Src/main.c ****   lcd_putstring("Wave: ");
 1452              		.loc 1 191 3 view .LVU418
 1453 0098 0120     		movs	r0, #1
 1454 009a FFF7FEFF 		bl	lcd_command
 1455              	.LVL89:
 192:Core/Src/main.c ****   lcd_putstring((char*)WaveName(g_wave_index));
 1456              		.loc 1 192 3 view .LVU419
 1457 009e 2148     		ldr	r0, .L85+24
 1458 00a0 FFF7FEFF 		bl	lcd_putstring
 1459              	.LVL90:
 193:Core/Src/main.c **** 
 1460              		.loc 1 193 3 view .LVU420
 193:Core/Src/main.c **** 
 1461              		.loc 1 193 24 is_stmt 0 view .LVU421
 1462 00a4 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1463 00a6 FFF7FEFF 		bl	WaveName
 1464              	.LVL91:
 193:Core/Src/main.c **** 
 1465              		.loc 1 193 3 discriminator 1 view .LVU422
 1466 00aa FFF7FEFF 		bl	lcd_putstring
 1467              	.LVL92:
 196:Core/Src/main.c **** 
 1468              		.loc 1 196 3 is_stmt 1 view .LVU423
 196:Core/Src/main.c **** 
 1469              		.loc 1 196 7 is_stmt 0 view .LVU424
 1470 00ae 0821     		movs	r1, #8
 1471 00b0 1D48     		ldr	r0, .L85+28
 1472 00b2 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 1473              	.LVL93:
 196:Core/Src/main.c **** 
 1474              		.loc 1 196 6 discriminator 1 view .LVU425
 1475 00b6 08B1     		cbz	r0, .L77
 196:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 59


 1476              		.loc 1 196 61 is_stmt 1 discriminator 1 view .LVU426
 1477 00b8 FFF7FEFF 		bl	Error_Handler
 1478              	.LVL94:
 1479              	.L77:
 199:Core/Src/main.c **** 
 1480              		.loc 1 199 3 view .LVU427
 199:Core/Src/main.c **** 
 1481              		.loc 1 199 7 is_stmt 0 view .LVU428
 1482 00bc 0021     		movs	r1, #0
 1483 00be 1B48     		ldr	r0, .L85+32
 1484 00c0 FFF7FEFF 		bl	HAL_TIM_OC_Start
 1485              	.LVL95:
 199:Core/Src/main.c **** 
 1486              		.loc 1 199 6 discriminator 1 view .LVU429
 1487 00c4 08B1     		cbz	r0, .L78
 199:Core/Src/main.c **** 
 1488              		.loc 1 199 60 is_stmt 1 discriminator 1 view .LVU430
 1489 00c6 FFF7FEFF 		bl	Error_Handler
 1490              	.LVL96:
 1491              	.L78:
 202:Core/Src/main.c **** 
 1492              		.loc 1 202 3 view .LVU431
 202:Core/Src/main.c **** 
 1493              		.loc 1 202 7 is_stmt 0 view .LVU432
 1494 00ca 4FF48073 		mov	r3, #256
 1495 00ce 184A     		ldr	r2, .L85+36
 1496 00d0 1268     		ldr	r2, [r2]
 1497 00d2 1249     		ldr	r1, .L85+16
 1498 00d4 0968     		ldr	r1, [r1]
 1499 00d6 1748     		ldr	r0, .L85+40
 1500 00d8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1501              	.LVL97:
 202:Core/Src/main.c **** 
 1502              		.loc 1 202 6 discriminator 1 view .LVU433
 1503 00dc 98B9     		cbnz	r0, .L84
 205:Core/Src/main.c **** 
 1504              		.loc 1 205 3 is_stmt 1 view .LVU434
 1505 00de 134B     		ldr	r3, .L85+32
 1506 00e0 1A68     		ldr	r2, [r3]
 1507 00e2 D368     		ldr	r3, [r2, #12]
 1508 00e4 43F40073 		orr	r3, r3, #512
 1509 00e8 D360     		str	r3, [r2, #12]
 1510              	.L80:
 211:Core/Src/main.c ****   {
 1511              		.loc 1 211 3 view .LVU435
 1512              	.LBB22:
 217:Core/Src/main.c ****     uint32_t now = HAL_GetTick();
 1513              		.loc 1 217 5 view .LVU436
 218:Core/Src/main.c ****     if ((now - last_toggle) >= 250U) {
 1514              		.loc 1 218 5 view .LVU437
 218:Core/Src/main.c ****     if ((now - last_toggle) >= 250U) {
 1515              		.loc 1 218 20 is_stmt 0 view .LVU438
 1516 00ea FFF7FEFF 		bl	HAL_GetTick
 1517              	.LVL98:
 219:Core/Src/main.c ****       last_toggle = now;
 1518              		.loc 1 219 5 is_stmt 1 view .LVU439
 219:Core/Src/main.c ****       last_toggle = now;
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 60


 1519              		.loc 1 219 14 is_stmt 0 view .LVU440
 1520 00ee 124B     		ldr	r3, .L85+44
 1521 00f0 1B68     		ldr	r3, [r3]
 1522 00f2 C31A     		subs	r3, r0, r3
 219:Core/Src/main.c ****       last_toggle = now;
 1523              		.loc 1 219 8 view .LVU441
 1524 00f4 F92B     		cmp	r3, #249
 1525 00f6 F8D9     		bls	.L80
 220:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 1526              		.loc 1 220 7 is_stmt 1 view .LVU442
 220:Core/Src/main.c ****       HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_7);
 1527              		.loc 1 220 19 is_stmt 0 view .LVU443
 1528 00f8 0F4B     		ldr	r3, .L85+44
 1529 00fa 1860     		str	r0, [r3]
 221:Core/Src/main.c ****     }
 1530              		.loc 1 221 7 is_stmt 1 view .LVU444
 1531 00fc 8021     		movs	r1, #128
 1532 00fe 0448     		ldr	r0, .L85+4
 1533              	.LVL99:
 221:Core/Src/main.c ****     }
 1534              		.loc 1 221 7 is_stmt 0 view .LVU445
 1535 0100 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1536              	.LVL100:
 221:Core/Src/main.c ****     }
 1537              		.loc 1 221 7 view .LVU446
 1538 0104 F1E7     		b	.L80
 1539              	.LVL101:
 1540              	.L84:
 221:Core/Src/main.c ****     }
 1541              		.loc 1 221 7 view .LVU447
 1542              	.LBE22:
 202:Core/Src/main.c **** 
 1543              		.loc 1 202 95 is_stmt 1 discriminator 1 view .LVU448
 1544 0106 FFF7FEFF 		bl	Error_Handler
 1545              	.LVL102:
 1546              	.L86:
 1547 010a 00BF     		.align	2
 1548              	.L85:
 1549 010c 00380240 		.word	1073887232
 1550 0110 00040240 		.word	1073873920
 1551 0114 3F0D0300 		.word	199999
 1552 0118 00000000 		.word	g_wave_index
 1553 011c 00000000 		.word	g_current_lut
 1554 0120 00000000 		.word	Sin_LUT
 1555 0124 00000000 		.word	.LC7
 1556 0128 00000000 		.word	htim3
 1557 012c 00000000 		.word	htim2
 1558 0130 00000000 		.word	DestAddress
 1559 0134 00000000 		.word	hdma_tim2_ch1
 1560 0138 00000000 		.word	last_toggle.1
 1561              		.cfi_endproc
 1562              	.LFE139:
 1564              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 1565              		.align	1
 1566              		.global	EXTI0_IRQHandler
 1567              		.syntax unified
 1568              		.thumb
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 61


 1569              		.thumb_func
 1571              	EXTI0_IRQHandler:
 1572              	.LFB145:
 489:Core/Src/main.c **** 
 1573              		.loc 1 489 28 view -0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 0
 1576              		@ frame_needed = 0, uses_anonymous_args = 0
 1577 0000 08B5     		push	{r3, lr}
 1578              	.LCFI23:
 1579              		.cfi_def_cfa_offset 8
 1580              		.cfi_offset 3, -8
 1581              		.cfi_offset 14, -4
 492:Core/Src/main.c **** 	uint32_t now = HAL_GetTick();
 1582              		.loc 1 492 2 view .LVU450
 493:Core/Src/main.c **** 	if ((now - last) < 150) { // ~150ms debounce
 1583              		.loc 1 493 2 view .LVU451
 493:Core/Src/main.c **** 	if ((now - last) < 150) { // ~150ms debounce
 1584              		.loc 1 493 17 is_stmt 0 view .LVU452
 1585 0002 FFF7FEFF 		bl	HAL_GetTick
 1586              	.LVL103:
 494:Core/Src/main.c **** 		HAL_GPIO_EXTI_IRQHandler(Button0_Pin); // Clear interrupt flags
 1587              		.loc 1 494 2 is_stmt 1 view .LVU453
 494:Core/Src/main.c **** 		HAL_GPIO_EXTI_IRQHandler(Button0_Pin); // Clear interrupt flags
 1588              		.loc 1 494 11 is_stmt 0 view .LVU454
 1589 0006 334B     		ldr	r3, .L103
 1590 0008 1B68     		ldr	r3, [r3]
 1591 000a C31A     		subs	r3, r0, r3
 494:Core/Src/main.c **** 		HAL_GPIO_EXTI_IRQHandler(Button0_Pin); // Clear interrupt flags
 1592              		.loc 1 494 5 view .LVU455
 1593 000c 952B     		cmp	r3, #149
 1594 000e 1FD9     		bls	.L101
 498:Core/Src/main.c **** 
 1595              		.loc 1 498 2 is_stmt 1 view .LVU456
 498:Core/Src/main.c **** 
 1596              		.loc 1 498 7 is_stmt 0 view .LVU457
 1597 0010 304B     		ldr	r3, .L103
 1598 0012 1860     		str	r0, [r3]
 501:Core/Src/main.c **** 	HAL_DMA_Abort(&hdma_tim2_ch1);
 1599              		.loc 1 501 2 is_stmt 1 view .LVU458
 1600 0014 304B     		ldr	r3, .L103+4
 1601 0016 1A68     		ldr	r2, [r3]
 1602 0018 D368     		ldr	r3, [r2, #12]
 1603 001a 23F40073 		bic	r3, r3, #512
 1604 001e D360     		str	r3, [r2, #12]
 502:Core/Src/main.c **** 
 1605              		.loc 1 502 2 view .LVU459
 1606 0020 2E48     		ldr	r0, .L103+8
 1607              	.LVL104:
 502:Core/Src/main.c **** 
 1608              		.loc 1 502 2 is_stmt 0 view .LVU460
 1609 0022 FFF7FEFF 		bl	HAL_DMA_Abort
 1610              	.LVL105:
 505:Core/Src/main.c **** 	switch(g_wave_index){
 1611              		.loc 1 505 2 is_stmt 1 view .LVU461
 505:Core/Src/main.c **** 	switch(g_wave_index){
 1612              		.loc 1 505 41 is_stmt 0 view .LVU462
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 62


 1613 0026 2E49     		ldr	r1, .L103+12
 1614 0028 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1615 002a 0132     		adds	r2, r2, #1
 505:Core/Src/main.c **** 	switch(g_wave_index){
 1616              		.loc 1 505 46 view .LVU463
 1617 002c 2D4B     		ldr	r3, .L103+16
 1618 002e 83FB0203 		smull	r0, r3, r3, r2
 1619 0032 03EB4303 		add	r3, r3, r3, lsl #1
 1620 0036 A2EB4303 		sub	r3, r2, r3, lsl #1
 505:Core/Src/main.c **** 	switch(g_wave_index){
 1621              		.loc 1 505 17 view .LVU464
 1622 003a DBB2     		uxtb	r3, r3
 505:Core/Src/main.c **** 	switch(g_wave_index){
 1623              		.loc 1 505 15 view .LVU465
 1624 003c 0B70     		strb	r3, [r1]
 506:Core/Src/main.c **** 		case 0: g_current_lut = Sin_LUT; break;
 1625              		.loc 1 506 2 is_stmt 1 view .LVU466
 1626 003e 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1627 0040 DBB2     		uxtb	r3, r3
 1628 0042 052B     		cmp	r3, #5
 1629 0044 3FD8     		bhi	.L90
 1630 0046 DFE803F0 		tbb	[pc, r3]
 1631              	.L92:
 1632 004a 07       		.byte	(.L97-.L92)/2
 1633 004b 2A       		.byte	(.L96-.L92)/2
 1634 004c 2E       		.byte	(.L95-.L92)/2
 1635 004d 32       		.byte	(.L94-.L92)/2
 1636 004e 36       		.byte	(.L93-.L92)/2
 1637 004f 3A       		.byte	(.L91-.L92)/2
 1638              	.LVL106:
 1639              		.p2align 1
 1640              	.L101:
 495:Core/Src/main.c **** 		return;
 1641              		.loc 1 495 3 view .LVU467
 1642 0050 0120     		movs	r0, #1
 1643              	.LVL107:
 495:Core/Src/main.c **** 		return;
 1644              		.loc 1 495 3 is_stmt 0 view .LVU468
 1645 0052 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 1646              	.LVL108:
 496:Core/Src/main.c **** 	}
 1647              		.loc 1 496 3 is_stmt 1 view .LVU469
 1648 0056 21E0     		b	.L87
 1649              	.L97:
 507:Core/Src/main.c **** 		case 1: g_current_lut = Saw_LUT; break;
 1650              		.loc 1 507 11 view .LVU470
 507:Core/Src/main.c **** 		case 1: g_current_lut = Saw_LUT; break;
 1651              		.loc 1 507 25 is_stmt 0 view .LVU471
 1652 0058 234B     		ldr	r3, .L103+20
 1653 005a 244A     		ldr	r2, .L103+24
 1654 005c 1A60     		str	r2, [r3]
 507:Core/Src/main.c **** 		case 1: g_current_lut = Saw_LUT; break;
 1655              		.loc 1 507 36 is_stmt 1 view .LVU472
 1656              	.L98:
 517:Core/Src/main.c **** 	lcd_putstring("Wave: ");
 1657              		.loc 1 517 2 view .LVU473
 1658 005e 0120     		movs	r0, #1
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 63


 1659 0060 FFF7FEFF 		bl	lcd_command
 1660              	.LVL109:
 518:Core/Src/main.c **** 	lcd_putstring((char*)WaveName(g_wave_index));
 1661              		.loc 1 518 2 view .LVU474
 1662 0064 2248     		ldr	r0, .L103+28
 1663 0066 FFF7FEFF 		bl	lcd_putstring
 1664              	.LVL110:
 519:Core/Src/main.c **** 
 1665              		.loc 1 519 2 view .LVU475
 519:Core/Src/main.c **** 
 1666              		.loc 1 519 23 is_stmt 0 view .LVU476
 1667 006a 1D4B     		ldr	r3, .L103+12
 1668 006c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1669 006e FFF7FEFF 		bl	WaveName
 1670              	.LVL111:
 519:Core/Src/main.c **** 
 1671              		.loc 1 519 2 discriminator 1 view .LVU477
 1672 0072 FFF7FEFF 		bl	lcd_putstring
 1673              	.LVL112:
 522:Core/Src/main.c **** 		Error_Handler();
 1674              		.loc 1 522 2 is_stmt 1 view .LVU478
 522:Core/Src/main.c **** 		Error_Handler();
 1675              		.loc 1 522 6 is_stmt 0 view .LVU479
 1676 0076 4FF48073 		mov	r3, #256
 1677 007a 1E4A     		ldr	r2, .L103+32
 1678 007c 1268     		ldr	r2, [r2]
 1679 007e 1A49     		ldr	r1, .L103+20
 1680 0080 0968     		ldr	r1, [r1]
 1681 0082 1648     		ldr	r0, .L103+8
 1682 0084 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1683              	.LVL113:
 522:Core/Src/main.c **** 		Error_Handler();
 1684              		.loc 1 522 5 discriminator 1 view .LVU480
 1685 0088 08BB     		cbnz	r0, .L102
 525:Core/Src/main.c **** 
 1686              		.loc 1 525 2 is_stmt 1 view .LVU481
 1687 008a 134B     		ldr	r3, .L103+4
 1688 008c 1A68     		ldr	r2, [r3]
 1689 008e D368     		ldr	r3, [r2, #12]
 1690 0090 43F40073 		orr	r3, r3, #512
 1691 0094 D360     		str	r3, [r2, #12]
 527:Core/Src/main.c **** }
 1692              		.loc 1 527 2 view .LVU482
 1693 0096 0120     		movs	r0, #1
 1694 0098 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 1695              	.LVL114:
 1696              	.L87:
 528:Core/Src/main.c **** /* USER CODE END 4 */
 1697              		.loc 1 528 1 is_stmt 0 view .LVU483
 1698 009c 08BD     		pop	{r3, pc}
 1699              	.L96:
 508:Core/Src/main.c **** 		case 2: g_current_lut = Triangle_LUT; break;
 1700              		.loc 1 508 11 is_stmt 1 view .LVU484
 508:Core/Src/main.c **** 		case 2: g_current_lut = Triangle_LUT; break;
 1701              		.loc 1 508 25 is_stmt 0 view .LVU485
 1702 009e 124B     		ldr	r3, .L103+20
 1703 00a0 154A     		ldr	r2, .L103+36
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 64


 1704 00a2 1A60     		str	r2, [r3]
 508:Core/Src/main.c **** 		case 2: g_current_lut = Triangle_LUT; break;
 1705              		.loc 1 508 36 is_stmt 1 view .LVU486
 1706 00a4 DBE7     		b	.L98
 1707              	.L95:
 509:Core/Src/main.c **** 		case 3: g_current_lut = Piano_LUT; break;
 1708              		.loc 1 509 11 view .LVU487
 509:Core/Src/main.c **** 		case 3: g_current_lut = Piano_LUT; break;
 1709              		.loc 1 509 25 is_stmt 0 view .LVU488
 1710 00a6 104B     		ldr	r3, .L103+20
 1711 00a8 144A     		ldr	r2, .L103+40
 1712 00aa 1A60     		str	r2, [r3]
 509:Core/Src/main.c **** 		case 3: g_current_lut = Piano_LUT; break;
 1713              		.loc 1 509 41 is_stmt 1 view .LVU489
 1714 00ac D7E7     		b	.L98
 1715              	.L94:
 510:Core/Src/main.c **** 		case 4: g_current_lut = Guitar_LUT; break;
 1716              		.loc 1 510 11 view .LVU490
 510:Core/Src/main.c **** 		case 4: g_current_lut = Guitar_LUT; break;
 1717              		.loc 1 510 25 is_stmt 0 view .LVU491
 1718 00ae 0E4B     		ldr	r3, .L103+20
 1719 00b0 134A     		ldr	r2, .L103+44
 1720 00b2 1A60     		str	r2, [r3]
 510:Core/Src/main.c **** 		case 4: g_current_lut = Guitar_LUT; break;
 1721              		.loc 1 510 38 is_stmt 1 view .LVU492
 1722 00b4 D3E7     		b	.L98
 1723              	.L93:
 511:Core/Src/main.c **** 		case 5: g_current_lut = Drum_LUT; break;
 1724              		.loc 1 511 11 view .LVU493
 511:Core/Src/main.c **** 		case 5: g_current_lut = Drum_LUT; break;
 1725              		.loc 1 511 25 is_stmt 0 view .LVU494
 1726 00b6 0C4B     		ldr	r3, .L103+20
 1727 00b8 124A     		ldr	r2, .L103+48
 1728 00ba 1A60     		str	r2, [r3]
 511:Core/Src/main.c **** 		case 5: g_current_lut = Drum_LUT; break;
 1729              		.loc 1 511 39 is_stmt 1 view .LVU495
 1730 00bc CFE7     		b	.L98
 1731              	.L91:
 512:Core/Src/main.c **** 		default: g_current_lut = Sin_LUT; break;
 1732              		.loc 1 512 11 view .LVU496
 512:Core/Src/main.c **** 		default: g_current_lut = Sin_LUT; break;
 1733              		.loc 1 512 25 is_stmt 0 view .LVU497
 1734 00be 0A4B     		ldr	r3, .L103+20
 1735 00c0 114A     		ldr	r2, .L103+52
 1736 00c2 1A60     		str	r2, [r3]
 512:Core/Src/main.c **** 		default: g_current_lut = Sin_LUT; break;
 1737              		.loc 1 512 37 is_stmt 1 view .LVU498
 1738 00c4 CBE7     		b	.L98
 1739              	.L90:
 513:Core/Src/main.c **** 	}
 1740              		.loc 1 513 12 view .LVU499
 513:Core/Src/main.c **** 	}
 1741              		.loc 1 513 26 is_stmt 0 view .LVU500
 1742 00c6 084B     		ldr	r3, .L103+20
 1743 00c8 084A     		ldr	r2, .L103+24
 1744 00ca 1A60     		str	r2, [r3]
 513:Core/Src/main.c **** 	}
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 65


 1745              		.loc 1 513 37 is_stmt 1 view .LVU501
 1746 00cc C7E7     		b	.L98
 1747              	.L102:
 523:Core/Src/main.c **** 	}
 1748              		.loc 1 523 3 view .LVU502
 1749 00ce FFF7FEFF 		bl	Error_Handler
 1750              	.LVL115:
 1751              	.L104:
 1752 00d2 00BF     		.align	2
 1753              	.L103:
 1754 00d4 00000000 		.word	last.0
 1755 00d8 00000000 		.word	htim2
 1756 00dc 00000000 		.word	hdma_tim2_ch1
 1757 00e0 00000000 		.word	g_wave_index
 1758 00e4 ABAAAA2A 		.word	715827883
 1759 00e8 00000000 		.word	g_current_lut
 1760 00ec 00000000 		.word	Sin_LUT
 1761 00f0 00000000 		.word	.LC7
 1762 00f4 00000000 		.word	DestAddress
 1763 00f8 00000000 		.word	Saw_LUT
 1764 00fc 00000000 		.word	Triangle_LUT
 1765 0100 00000000 		.word	Piano_LUT
 1766 0104 00000000 		.word	Guitar_LUT
 1767 0108 00000000 		.word	Drum_LUT
 1768              		.cfi_endproc
 1769              	.LFE145:
 1771              		.section	.bss.last.0,"aw",%nobits
 1772              		.align	2
 1775              	last.0:
 1776 0000 00000000 		.space	4
 1777              		.section	.bss.last_toggle.1,"aw",%nobits
 1778              		.align	2
 1781              	last_toggle.1:
 1782 0000 00000000 		.space	4
 1783              		.global	DestAddress
 1784              		.section	.data.DestAddress,"aw"
 1785              		.align	2
 1788              	DestAddress:
 1789 0000 3C040040 		.word	1073742908
 1790              		.global	TIM2_Ticks
 1791              		.section	.data.TIM2_Ticks,"aw"
 1792              		.align	2
 1795              	TIM2_Ticks:
 1796 0000 8E000000 		.word	142
 1797              		.section	.data.g_current_lut,"aw"
 1798              		.align	2
 1801              	g_current_lut:
 1802 0000 00000000 		.word	Sin_LUT
 1803              		.section	.bss.g_wave_index,"aw",%nobits
 1806              	g_wave_index:
 1807 0000 00       		.space	1
 1808              		.global	Drum_LUT
 1809              		.section	.bss.Drum_LUT,"aw",%nobits
 1810              		.align	2
 1813              	Drum_LUT:
 1814 0000 00000000 		.space	1024
 1814      00000000 
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 66


 1814      00000000 
 1814      00000000 
 1814      00000000 
 1815              		.global	Guitar_LUT
 1816              		.section	.bss.Guitar_LUT,"aw",%nobits
 1817              		.align	2
 1820              	Guitar_LUT:
 1821 0000 00000000 		.space	1024
 1821      00000000 
 1821      00000000 
 1821      00000000 
 1821      00000000 
 1822              		.global	Piano_LUT
 1823              		.section	.bss.Piano_LUT,"aw",%nobits
 1824              		.align	2
 1827              	Piano_LUT:
 1828 0000 00000000 		.space	1024
 1828      00000000 
 1828      00000000 
 1828      00000000 
 1828      00000000 
 1829              		.global	Triangle_LUT
 1830              		.section	.bss.Triangle_LUT,"aw",%nobits
 1831              		.align	2
 1834              	Triangle_LUT:
 1835 0000 00000000 		.space	1024
 1835      00000000 
 1835      00000000 
 1835      00000000 
 1835      00000000 
 1836              		.global	Saw_LUT
 1837              		.section	.bss.Saw_LUT,"aw",%nobits
 1838              		.align	2
 1841              	Saw_LUT:
 1842 0000 00000000 		.space	1024
 1842      00000000 
 1842      00000000 
 1842      00000000 
 1842      00000000 
 1843              		.global	Sin_LUT
 1844              		.section	.bss.Sin_LUT,"aw",%nobits
 1845              		.align	2
 1848              	Sin_LUT:
 1849 0000 00000000 		.space	1024
 1849      00000000 
 1849      00000000 
 1849      00000000 
 1849      00000000 
 1850              		.global	hdma_tim2_ch1
 1851              		.section	.bss.hdma_tim2_ch1,"aw",%nobits
 1852              		.align	2
 1855              	hdma_tim2_ch1:
 1856 0000 00000000 		.space	96
 1856      00000000 
 1856      00000000 
 1856      00000000 
 1856      00000000 
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 67


 1857              		.global	htim3
 1858              		.section	.bss.htim3,"aw",%nobits
 1859              		.align	2
 1862              	htim3:
 1863 0000 00000000 		.space	72
 1863      00000000 
 1863      00000000 
 1863      00000000 
 1863      00000000 
 1864              		.global	htim2
 1865              		.section	.bss.htim2,"aw",%nobits
 1866              		.align	2
 1869              	htim2:
 1870 0000 00000000 		.space	72
 1870      00000000 
 1870      00000000 
 1870      00000000 
 1870      00000000 
 1871              		.text
 1872              	.Letext0:
 1873              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 1874              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1875              		.file 5 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1876              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1877              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1878              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1879              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1880              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1881              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1882              		.file 12 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltoo
 1883              		.file 13 "Core/Inc/main.h"
 1884              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1885              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 1886              		.file 16 "Core/Inc/lcd_stm32f4.h"
 1887              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1888              		.file 18 "<built-in>"
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 68


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:21     .rodata.WaveName.str1.4:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:43     .text.WaveName:00000000 $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:48     .text.WaveName:00000000 WaveName
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:61     .text.WaveName:00000008 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:67     .text.WaveName:0000000e $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:123    .text.WaveName:0000002c $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:134    .text.MX_GPIO_Init:00000000 $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:139    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:345    .text.MX_GPIO_Init:00000104 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:353    .text.MX_DMA_Init:00000000 $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:358    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:407    .text.MX_DMA_Init:00000030 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:412    .text.Generate_LUTs:00000000 $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:417    .text.Generate_LUTs:00000000 Generate_LUTs
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:679    .text.Generate_LUTs:000001a0 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1834   .bss.Triangle_LUT:00000000 Triangle_LUT
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1827   .bss.Piano_LUT:00000000 Piano_LUT
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1820   .bss.Guitar_LUT:00000000 Guitar_LUT
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1813   .bss.Drum_LUT:00000000 Drum_LUT
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1848   .bss.Sin_LUT:00000000 Sin_LUT
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1841   .bss.Saw_LUT:00000000 Saw_LUT
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:702    .text.Error_Handler:00000000 $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:708    .text.Error_Handler:00000000 Error_Handler
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:740    .text.MX_TIM2_Init:00000000 $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:745    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:975    .text.MX_TIM2_Init:000000fc $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1869   .bss.htim2:00000000 htim2
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1795   .data.TIM2_Ticks:00000000 TIM2_Ticks
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1855   .bss.hdma_tim2_ch1:00000000 hdma_tim2_ch1
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:984    .text.MX_TIM3_Init:00000000 $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:989    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1142   .text.MX_TIM3_Init:0000009c $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1862   .bss.htim3:00000000 htim3
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1148   .text.SystemClock_Config:00000000 $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1154   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1283   .text.SystemClock_Config:00000084 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1289   .rodata.main.str1.4:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1293   .text.main:00000000 $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1299   .text.main:00000000 main
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1549   .text.main:0000010c $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1806   .bss.g_wave_index:00000000 g_wave_index
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1801   .data.g_current_lut:00000000 g_current_lut
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1788   .data.DestAddress:00000000 DestAddress
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1781   .bss.last_toggle.1:00000000 last_toggle.1
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1565   .text.EXTI0_IRQHandler:00000000 $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1571   .text.EXTI0_IRQHandler:00000000 EXTI0_IRQHandler
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1632   .text.EXTI0_IRQHandler:0000004a $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1639   .text.EXTI0_IRQHandler:00000050 $t
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1754   .text.EXTI0_IRQHandler:000000d4 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1775   .bss.last.0:00000000 last.0
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1772   .bss.last.0:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1778   .bss.last_toggle.1:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1785   .data.DestAddress:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1792   .data.TIM2_Ticks:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1798   .data.g_current_lut:00000000 $d
ARM GAS  C:\Users\einom\AppData\Local\Temp\cc346pFN.s 			page 69


C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1807   .bss.g_wave_index:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1810   .bss.Drum_LUT:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1817   .bss.Guitar_LUT:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1824   .bss.Piano_LUT:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1831   .bss.Triangle_LUT:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1838   .bss.Saw_LUT:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1845   .bss.Sin_LUT:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1852   .bss.hdma_tim2_ch1:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1859   .bss.htim3:00000000 $d
C:\Users\einom\AppData\Local\Temp\cc346pFN.s:1866   .bss.htim2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_Init
HAL_GPIO_WritePin
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
sinf
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
HAL_DMA_Init
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
init_LCD
lcd_command
lcd_putstring
HAL_TIM_PWM_Start
HAL_TIM_OC_Start
HAL_DMA_Start_IT
HAL_GetTick
HAL_GPIO_TogglePin
HAL_DMA_Abort
HAL_GPIO_EXTI_IRQHandler
